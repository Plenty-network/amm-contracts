parameter (or (or (or (pair %addPair (pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id)))) (pair (pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address))) (pair (nat %token2Id) (pair (option %token2Precision nat) (bool %token2Type))))) (address %changeAdminAddress)) (or (unit %changeDeployerState) (pair %deployStablePair (pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address)))) (pair (pair (nat %token2Amount) (pair (nat %token2Id) (nat %token2Precision))) (pair (bool %token2Type) (pair (bytes %tokenName) (address %userAddress))))))) (or (or (pair %deployVolatilePair (pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address)))) (pair (pair (nat %token2Amount) (nat %token2Id)) (pair (bool %token2Type) (pair (bytes %tokenName) (address %userAddress))))) (address %modifyStableDeployer)) (or (address %modifyVolatileDeployer) (pair %removePair (pair (address %exchangeAddress) (pair (bool %stableType) (address %token1Address))) (pair (nat %token1Id) (pair (address %token2Address) (nat %token2Id)))))));
storage   (pair (pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))));
code
  {
    UNPAIR;     # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%addPair
                # == addPair ==
                # sp.verify(sp.sender == self.data.adminAddress) # @storage : @parameter%addPair
                DUP;        # @storage : @storage : @parameter%addPair
                DUG 2;      # @storage : @parameter%addPair : @storage
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair : @storage
                CAR;        # pair (address %adminAddress) (bool %paused) : @parameter%addPair : @storage
                CAR;        # address : @parameter%addPair : @storage
                SENDER;     # @sender : address : @parameter%addPair : @storage
                COMPARE;    # int : @parameter%addPair : @storage
                EQ;         # bool : @parameter%addPair : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: sp.sender == self.data.adminAddress"; # string : @parameter%addPair : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%addPair : @storage
                # if params.stableType: # @parameter%addPair : @storage
                DUP;        # @parameter%addPair : @parameter%addPair : @storage
                CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @parameter%addPair : @storage
                GET 3;      # bool : @parameter%addPair : @storage
                IF
                  {
                    SWAP;       # @storage : @parameter%addPair
                    # if ~ (self.data.stableRegistry.contains(params.token1Address)): # @storage : @parameter%addPair
                    DUP;        # @storage : @storage : @parameter%addPair
                    DUG 2;      # @storage : @parameter%addPair : @storage
                    CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair : @storage
                    GET 6;      # big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUG 2;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET 5;      # address : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    MEM;        # bool : @parameter%addPair : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%addPair
                        # self.data.stableRegistry[params.token1Address] = {} # @storage : @parameter%addPair
                        UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # address : pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PUSH (option (map nat (map address (map nat address)))) (Some {}); # option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP 7;      # @parameter%addPair : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 5;      # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        SWAP;       # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                      }; # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    # if ~ (self.data.stableRegistry.contains(params.token2Address)): # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    DUP;        # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    DUG 2;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 6;      # big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 4;      # address : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    MEM;        # bool : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        # self.data.stableRegistry[params.token2Address] = {} # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PUSH (option (map nat (map address (map nat address)))) (Some {}); # option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP 7;      # @parameter%addPair : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 4;      # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        SWAP;       # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                      }; # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    # if ~ (self.data.stableRegistry[params.token1Address].contains(params.token1Id)): # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    DUP;        # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    DUG 2;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 6;      # big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 5;      # address : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET;        # option (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF_NONE
                      {
                        PUSH int 318; # int : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 6;      # nat : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    MEM;        # bool : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        # self.data.stableRegistry[params.token1Address][params.token1Id] = {} # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP 7;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 5;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        IF_NONE
                          {
                            PUSH int 320; # int : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PUSH (option (map address (map nat address))) (Some {}); # option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP 9;      # @parameter%addPair : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 6;      # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        SWAP;       # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                      }; # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    # if ~ (self.data.stableRegistry[params.token2Address].contains(params.token2Id)): # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    DUP;        # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    DUG 2;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 6;      # big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 4;      # address : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET;        # option (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF_NONE
                      {
                        PUSH int 318; # int : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 5;      # nat : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    MEM;        # bool : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        # self.data.stableRegistry[params.token2Address][params.token2Id] = {} # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP 7;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 4;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        IF_NONE
                          {
                            PUSH int 320; # int : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PUSH (option (map address (map nat address))) (Some {}); # option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP 9;      # @parameter%addPair : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 5;      # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        SWAP;       # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                      }; # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    # if ~ (self.data.stableRegistry[params.token1Address][params.token1Id].contains(params.token2Address)): # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    DUP;        # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    DUG 2;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 6;      # big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 5;      # address : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET;        # option (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF_NONE
                      {
                        PUSH int 324; # int : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 6;      # nat : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET;        # option (map address (map nat address)) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF_NONE
                      {
                        PUSH int 324; # int : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 4;      # address : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    MEM;        # bool : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        # self.data.stableRegistry[params.token1Address][params.token1Id][params.token2Address] = {} # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP 7;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 5;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        IF_NONE
                          {
                            PUSH int 326; # int : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP 9;      # @parameter%addPair : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 6;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        IF_NONE
                          {
                            PUSH int 326; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PUSH (option (map nat address)) (Some {}); # option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP 11;     # @parameter%addPair : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 4;      # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        SWAP;       # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                      }; # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    # if ~ (self.data.stableRegistry[params.token2Address][params.token2Id].contains(params.token1Address)): # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    DUP;        # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    DUG 2;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 6;      # big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 4;      # address : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET;        # option (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF_NONE
                      {
                        PUSH int 324; # int : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 5;      # nat : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET;        # option (map address (map nat address)) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF_NONE
                      {
                        PUSH int 324; # int : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 5;      # address : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    MEM;        # bool : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF
                      {}
                      {
                        SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        # self.data.stableRegistry[params.token2Address][params.token2Id][params.token1Address] = {} # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP 7;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 4;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        IF_NONE
                          {
                            PUSH int 326; # int : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP 9;      # @parameter%addPair : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 5;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        IF_NONE
                          {
                            PUSH int 326; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PUSH (option (map nat address)) (Some {}); # option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        DUP 11;     # @parameter%addPair : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        GET 5;      # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                        SWAP;       # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                      }; # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    # sp.verify(~ (self.data.stableRegistry[params.token1Address][params.token1Id][params.token2Address].contains(params.token2Id)), 'PairExist') # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    DUP;        # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    DUG 2;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 6;      # big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 5;      # address : big_map address (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET;        # option (map nat (map address (map nat address))) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF_NONE
                      {
                        PUSH int 221; # int : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 6;      # nat : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET;        # option (map address (map nat address)) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF_NONE
                      {
                        PUSH int 221; # int : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 4;      # address : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET;        # option (map nat address) : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF_NONE
                      {
                        PUSH int 221; # int : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 5;      # nat : @some : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    MEM;        # bool : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF
                      {
                        PUSH string "PairExist"; # string : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    # self.data.stableRegistry[params.token1Address][params.token1Id][params.token2Address][params.token2Id] = params.lpTokenAddress # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SWAP;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    UNPAIR;     # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SWAP;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP 7;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET 5;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    IF_NONE
                      {
                        PUSH int 223; # int : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP 9;      # @parameter%addPair : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET 6;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    IF_NONE
                      {
                        PUSH int 223; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP;        # @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP 11;     # @parameter%addPair : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET 4;      # address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP;        # address : address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUG 2;      # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET;        # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    IF_NONE
                      {
                        PUSH int 223; # int : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP 12;     # @parameter%addPair : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    CAR;        # pair (address %exchangeAddress) (address %lpTokenAddress) : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    CDR;        # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SOME;       # option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP 13;     # @parameter%addPair : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET 5;      # nat : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    UPDATE;     # map nat address : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SOME;       # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SWAP;       # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    # self.data.stableRegistry[params.token2Address][params.token2Id][params.token1Address][params.token1Id] = params.lpTokenAddress # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP 7;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET 4;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    IF_NONE
                      {
                        PUSH int 225; # int : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP 9;      # @parameter%addPair : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET 5;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    IF_NONE
                      {
                        PUSH int 225; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP;        # @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP 11;     # @parameter%addPair : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET 5;      # address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP;        # address : address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUG 2;      # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET;        # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    IF_NONE
                      {
                        PUSH int 225; # int : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP 12;     # @parameter%addPair : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    CAR;        # pair (address %exchangeAddress) (address %lpTokenAddress) : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    CDR;        # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SOME;       # option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    DUP 13;     # @parameter%addPair : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    GET 6;      # nat : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    UPDATE;     # map nat address : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SOME;       # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SWAP;       # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%addPair
                    PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%addPair
                    SWAP;       # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    # if True:
                    # sp.transfer(sp.record(exchangeAddress = params.exchangeAddress, lpTokenAddress = params.lpTokenAddress, routerCall = True, token1Address = params.token1Address, token1Id = params.token1Id, token1Precision = params.token1Precision.open_some(), token1Type = params.token1Type, token2Address = params.token2Address, token2Id = params.token2Id, token2Precision = params.token2Precision.open_some(), token2Type = params.token2Type), sp.tez(0), sp.contract(sp.TRecord(exchangeAddress = sp.TAddress, lpTokenAddress = sp.TAddress, routerCall = sp.TBool, token1Address = sp.TAddress, token1Id = sp.TNat, token1Precision = sp.TNat, token1Type = sp.TBool, token2Address = sp.TAddress, token2Id = sp.TNat, token2Precision = sp.TNat, token2Type = sp.TBool).layout(((("exchangeAddress", "lpTokenAddress"), ("routerCall", ("token1Address", "token1Id"))), (("token1Precision", ("token1Type", "token2Address")), ("token2Id", ("token2Precision", "token2Type"))))), self.data.stableAmmDeployer, entry_point='addExistingPair').open_some()) # @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    NIL operation; # list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP 3;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 3;      # address : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CONTRACT %addExistingPair (pair (pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %routerCall) (pair (address %token1Address) (nat %token1Id)))) (pair (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) (pair (nat %token2Id) (pair (nat %token2Precision) (bool %token2Type))))); # option (contract (pair (pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %routerCall) (pair (address %token1Address) (nat %token1Id)))) (pair (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) (pair (nat %token2Id) (pair (nat %token2Precision) (bool %token2Type)))))) : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF_NONE
                      {
                        PUSH int 349; # int : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DIG 3;      # @parameter%addPair : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 8;      # bool : @parameter%addPair : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : bool : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : bool : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 5;      # @parameter%addPair : bool : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 7;      # option nat : bool : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF_NONE
                      {
                        PUSH int 368; # int : bool : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : bool : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    PAIR;       # pair @some bool : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP 5;      # @parameter%addPair : pair @some bool : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 5;      # nat : pair @some bool : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    PAIR;       # pair nat (pair @some bool) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DIG 4;      # @parameter%addPair : pair nat (pair @some bool) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : pair nat (pair @some bool) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : @parameter%addPair : pair nat (pair @some bool) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 4;      # address : @parameter%addPair : pair nat (pair @some bool) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : address : pair nat (pair @some bool) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : address : pair nat (pair @some bool) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 6;      # @parameter%addPair : address : pair nat (pair @some bool) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : address : pair nat (pair @some bool) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 3;      # bool : address : pair nat (pair @some bool) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    PAIR;       # pair bool address : pair nat (pair @some bool) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP 6;      # @parameter%addPair : pair bool address : pair nat (pair @some bool) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : pair bool address : pair nat (pair @some bool) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # option nat : pair bool address : pair nat (pair @some bool) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF_NONE
                      {
                        PUSH int 364; # int : pair bool address : pair nat (pair @some bool) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair bool address : pair nat (pair @some bool) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    PAIR;       # pair @some (pair bool address) : pair nat (pair @some bool) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    PAIR;       # pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DIG 4;      # @parameter%addPair : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @parameter%addPair : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 6;      # nat : @parameter%addPair : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : nat : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : nat : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUG 6;      # @parameter%addPair : nat : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : nat : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 5;      # address : nat : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    PAIR;       # pair address nat : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    PUSH bool True; # bool : pair address nat : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    PAIR;       # pair bool (pair address nat) : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : @parameter%addPair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DIG 5;      # @parameter%addPair : pair bool (pair address nat) : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP;        # @parameter%addPair : @parameter%addPair : pair bool (pair address nat) : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @parameter%addPair : pair bool (pair address nat) : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (address %exchangeAddress) (address %lpTokenAddress) : @parameter%addPair : pair bool (pair address nat) : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CDR;        # address : @parameter%addPair : pair bool (pair address nat) : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    SWAP;       # @parameter%addPair : address : pair bool (pair address nat) : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : address : pair bool (pair address nat) : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (address %exchangeAddress) (address %lpTokenAddress) : address : pair bool (pair address nat) : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # address : address : pair bool (pair address nat) : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    PAIR;       # pair address address : pair bool (pair address nat) : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    PAIR;       # pair (pair address address) (pair bool (pair address nat)) : pair (pair @some (pair bool address)) (pair nat (pair @some bool)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    PAIR;       # pair (pair (pair address address) (pair bool (pair address nat))) (pair (pair @some (pair bool address)) (pair nat (pair @some bool))) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CONS;       # list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                  }
                  {
                    SWAP;       # @storage : @parameter%addPair
                    # if ~ (self.data.volatileRegistry.contains(params.token1Address)): # @storage : @parameter%addPair
                    DUP;        # @storage : @storage : @parameter%addPair
                    DUG 2;      # @storage : @parameter%addPair : @storage
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUG 2;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET 5;      # address : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    MEM;        # bool : @parameter%addPair : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%addPair
                        # self.data.volatileRegistry[params.token1Address] = {} # @storage : @parameter%addPair
                        DUP;        # @storage : @storage : @parameter%addPair
                        GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        PUSH (option (map nat (map address (map nat address)))) (Some {}); # option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP 4;      # @parameter%addPair : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 5;      # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE 8;   # @storage : @parameter%addPair
                        SWAP;       # @parameter%addPair : @storage
                      }; # @parameter%addPair : @storage
                    SWAP;       # @storage : @parameter%addPair
                    # if ~ (self.data.volatileRegistry.contains(params.token2Address)): # @storage : @parameter%addPair
                    DUP;        # @storage : @storage : @parameter%addPair
                    DUG 2;      # @storage : @parameter%addPair : @storage
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUG 2;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET 4;      # address : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    MEM;        # bool : @parameter%addPair : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%addPair
                        # self.data.volatileRegistry[params.token2Address] = {} # @storage : @parameter%addPair
                        DUP;        # @storage : @storage : @parameter%addPair
                        GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        PUSH (option (map nat (map address (map nat address)))) (Some {}); # option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP 4;      # @parameter%addPair : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 4;      # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE 8;   # @storage : @parameter%addPair
                        SWAP;       # @parameter%addPair : @storage
                      }; # @parameter%addPair : @storage
                    SWAP;       # @storage : @parameter%addPair
                    # if ~ (self.data.volatileRegistry[params.token1Address].contains(params.token1Id)): # @storage : @parameter%addPair
                    DUP;        # @storage : @storage : @parameter%addPair
                    DUG 2;      # @storage : @parameter%addPair : @storage
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUG 2;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET 5;      # address : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET;        # option (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    IF_NONE
                      {
                        PUSH int 335; # int : @parameter%addPair : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : @some : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : @storage
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : @storage
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : @parameter%addPair : @storage
                    GET 6;      # nat : @some : @parameter%addPair : @storage
                    MEM;        # bool : @parameter%addPair : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%addPair
                        # self.data.volatileRegistry[params.token1Address][params.token1Id] = {} # @storage : @parameter%addPair
                        DUP;        # @storage : @storage : @parameter%addPair
                        GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP 4;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 5;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        IF_NONE
                          {
                            PUSH int 337; # int : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        PUSH (option (map address (map nat address))) (Some {}); # option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP 6;      # @parameter%addPair : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 6;      # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE 8;   # @storage : @parameter%addPair
                        SWAP;       # @parameter%addPair : @storage
                      }; # @parameter%addPair : @storage
                    SWAP;       # @storage : @parameter%addPair
                    # if ~ (self.data.volatileRegistry[params.token2Address].contains(params.token2Id)): # @storage : @parameter%addPair
                    DUP;        # @storage : @storage : @parameter%addPair
                    DUG 2;      # @storage : @parameter%addPair : @storage
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUG 2;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET 4;      # address : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET;        # option (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    IF_NONE
                      {
                        PUSH int 335; # int : @parameter%addPair : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : @some : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : @storage
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : @storage
                    GET 5;      # nat : @some : @parameter%addPair : @storage
                    MEM;        # bool : @parameter%addPair : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%addPair
                        # self.data.volatileRegistry[params.token2Address][params.token2Id] = {} # @storage : @parameter%addPair
                        DUP;        # @storage : @storage : @parameter%addPair
                        GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP 4;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 4;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        IF_NONE
                          {
                            PUSH int 337; # int : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        PUSH (option (map address (map nat address))) (Some {}); # option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP 6;      # @parameter%addPair : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 5;      # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE 8;   # @storage : @parameter%addPair
                        SWAP;       # @parameter%addPair : @storage
                      }; # @parameter%addPair : @storage
                    SWAP;       # @storage : @parameter%addPair
                    # if ~ (self.data.volatileRegistry[params.token1Address][params.token1Id].contains(params.token2Address)): # @storage : @parameter%addPair
                    DUP;        # @storage : @storage : @parameter%addPair
                    DUG 2;      # @storage : @parameter%addPair : @storage
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUG 2;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET 5;      # address : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET;        # option (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    IF_NONE
                      {
                        PUSH int 341; # int : @parameter%addPair : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : @some : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : @storage
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : @storage
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : @parameter%addPair : @storage
                    GET 6;      # nat : @some : @parameter%addPair : @storage
                    GET;        # option (map address (map nat address)) : @parameter%addPair : @storage
                    IF_NONE
                      {
                        PUSH int 341; # int : @parameter%addPair : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : @some : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : @storage
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : @storage
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : @some : @parameter%addPair : @storage
                    GET 4;      # address : @some : @parameter%addPair : @storage
                    MEM;        # bool : @parameter%addPair : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%addPair
                        # self.data.volatileRegistry[params.token1Address][params.token1Id][params.token2Address] = {} # @storage : @parameter%addPair
                        DUP;        # @storage : @storage : @parameter%addPair
                        GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP 4;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 5;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        IF_NONE
                          {
                            PUSH int 343; # int : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP 6;      # @parameter%addPair : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 6;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        IF_NONE
                          {
                            PUSH int 343; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        PUSH (option (map nat address)) (Some {}); # option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP 8;      # @parameter%addPair : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 4;      # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE 8;   # @storage : @parameter%addPair
                        SWAP;       # @parameter%addPair : @storage
                      }; # @parameter%addPair : @storage
                    SWAP;       # @storage : @parameter%addPair
                    # if ~ (self.data.volatileRegistry[params.token2Address][params.token2Id].contains(params.token1Address)): # @storage : @parameter%addPair
                    DUP;        # @storage : @storage : @parameter%addPair
                    DUG 2;      # @storage : @parameter%addPair : @storage
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUG 2;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET 4;      # address : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET;        # option (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    IF_NONE
                      {
                        PUSH int 341; # int : @parameter%addPair : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : @some : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : @storage
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : @storage
                    GET 5;      # nat : @some : @parameter%addPair : @storage
                    GET;        # option (map address (map nat address)) : @parameter%addPair : @storage
                    IF_NONE
                      {
                        PUSH int 341; # int : @parameter%addPair : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : @some : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : @storage
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : @storage
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : @parameter%addPair : @storage
                    GET 5;      # address : @some : @parameter%addPair : @storage
                    MEM;        # bool : @parameter%addPair : @storage
                    IF
                      {}
                      {
                        SWAP;       # @storage : @parameter%addPair
                        # self.data.volatileRegistry[params.token2Address][params.token2Id][params.token1Address] = {} # @storage : @parameter%addPair
                        DUP;        # @storage : @storage : @parameter%addPair
                        GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP 4;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 4;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        IF_NONE
                          {
                            PUSH int 343; # int : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP 6;      # @parameter%addPair : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 5;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        IF_NONE
                          {
                            PUSH int 343; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        PUSH (option (map nat address)) (Some {}); # option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        DUP 8;      # @parameter%addPair : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        GET 5;      # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        UPDATE 8;   # @storage : @parameter%addPair
                        SWAP;       # @parameter%addPair : @storage
                      }; # @parameter%addPair : @storage
                    SWAP;       # @storage : @parameter%addPair
                    # sp.verify(~ (self.data.volatileRegistry[params.token1Address][params.token1Id][params.token2Address].contains(params.token2Id)), 'PairExist') # @storage : @parameter%addPair
                    DUP;        # @storage : @storage : @parameter%addPair
                    DUG 2;      # @storage : @parameter%addPair : @storage
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : big_map address (map nat (map address (map nat address))) : @storage
                    DUG 2;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET 5;      # address : big_map address (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    GET;        # option (map nat (map address (map nat address))) : @parameter%addPair : @storage
                    IF_NONE
                      {
                        PUSH int 248; # int : @parameter%addPair : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : @some : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : @storage
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : @storage
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : @parameter%addPair : @storage
                    GET 6;      # nat : @some : @parameter%addPair : @storage
                    GET;        # option (map address (map nat address)) : @parameter%addPair : @storage
                    IF_NONE
                      {
                        PUSH int 248; # int : @parameter%addPair : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : @some : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : @storage
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : @storage
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : @some : @parameter%addPair : @storage
                    GET 4;      # address : @some : @parameter%addPair : @storage
                    GET;        # option (map nat address) : @parameter%addPair : @storage
                    IF_NONE
                      {
                        PUSH int 248; # int : @parameter%addPair : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%addPair : @storage
                    SWAP;       # @parameter%addPair : @some : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : @some : @storage
                    DUG 2;      # @parameter%addPair : @some : @parameter%addPair : @storage
                    GET 5;      # nat : @some : @parameter%addPair : @storage
                    MEM;        # bool : @parameter%addPair : @storage
                    IF
                      {
                        PUSH string "PairExist"; # string : @parameter%addPair : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @parameter%addPair : @storage
                    SWAP;       # @storage : @parameter%addPair
                    # self.data.volatileRegistry[params.token1Address][params.token1Id][params.token2Address][params.token2Id] = params.lpTokenAddress # @storage : @parameter%addPair
                    DUP;        # @storage : @storage : @parameter%addPair
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP 4;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET 5;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    IF_NONE
                      {
                        PUSH int 250; # int : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP 6;      # @parameter%addPair : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET 6;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    IF_NONE
                      {
                        PUSH int 250; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP;        # @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP 8;      # @parameter%addPair : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET 4;      # address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP;        # address : address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUG 2;      # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET;        # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    IF_NONE
                      {
                        PUSH int 250; # int : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP 9;      # @parameter%addPair : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    CAR;        # pair (address %exchangeAddress) (address %lpTokenAddress) : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    CDR;        # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    SOME;       # option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP 10;     # @parameter%addPair : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET 5;      # nat : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    UPDATE;     # map nat address : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    SOME;       # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    SWAP;       # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    UPDATE 8;   # @storage : @parameter%addPair
                    # self.data.volatileRegistry[params.token2Address][params.token2Id][params.token1Address][params.token1Id] = params.lpTokenAddress # @storage : @parameter%addPair
                    DUP;        # @storage : @storage : @parameter%addPair
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP 4;      # @parameter%addPair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET 4;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    IF_NONE
                      {
                        PUSH int 252; # int : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP 6;      # @parameter%addPair : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET 5;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    IF_NONE
                      {
                        PUSH int 252; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP;        # @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP 8;      # @parameter%addPair : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET 5;      # address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP;        # address : address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUG 2;      # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET;        # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    IF_NONE
                      {
                        PUSH int 252; # int : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP 9;      # @parameter%addPair : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    CAR;        # pair (address %exchangeAddress) (address %lpTokenAddress) : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    CDR;        # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    SOME;       # option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    DUP 10;     # @parameter%addPair : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    GET 6;      # nat : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    UPDATE;     # map nat address : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    SOME;       # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    SWAP;       # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%addPair
                    UPDATE 8;   # @storage : @parameter%addPair
                    SWAP;       # @parameter%addPair : @storage
                    # if False:
                    # sp.transfer(sp.record(exchangeAddress = params.exchangeAddress, lpTokenAddress = params.lpTokenAddress, routerCall = True, token1Address = params.token1Address, token1Id = params.token1Id, token1Type = params.token1Type, token2Address = params.token2Address, token2Id = params.token2Id, token2Type = params.token2Type), sp.tez(0), sp.contract(sp.TRecord(exchangeAddress = sp.TAddress, lpTokenAddress = sp.TAddress, routerCall = sp.TBool, token1Address = sp.TAddress, token1Id = sp.TNat, token1Type = sp.TBool, token2Address = sp.TAddress, token2Id = sp.TNat, token2Type = sp.TBool).layout(((("exchangeAddress", "lpTokenAddress"), ("routerCall", "token1Address")), (("token1Id", "token1Type"), ("token2Address", ("token2Id", "token2Type"))))), self.data.volatileAmmDeployer, entry_point='addExistingPair').open_some()) # @parameter%addPair : @storage
                    NIL operation; # list operation : @parameter%addPair : @storage
                    DUP 3;      # @storage : list operation : @parameter%addPair : @storage
                    GET 5;      # address : list operation : @parameter%addPair : @storage
                    CONTRACT %addExistingPair (pair (pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %routerCall) (address %token1Address))) (pair (pair (nat %token1Id) (bool %token1Type)) (pair (address %token2Address) (pair (nat %token2Id) (bool %token2Type))))); # option (contract (pair (pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %routerCall) (address %token1Address))) (pair (pair (nat %token1Id) (bool %token1Type)) (pair (address %token2Address) (pair (nat %token2Id) (bool %token2Type)))))) : list operation : @parameter%addPair : @storage
                    IF_NONE
                      {
                        PUSH int 378; # int : list operation : @parameter%addPair : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @parameter%addPair : @storage
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%addPair : @storage
                    DIG 3;      # @parameter%addPair : mutez : @some : list operation : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : mutez : @some : list operation : @storage
                    GET 8;      # bool : @parameter%addPair : mutez : @some : list operation : @storage
                    SWAP;       # @parameter%addPair : bool : mutez : @some : list operation : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : bool : mutez : @some : list operation : @storage
                    DUG 5;      # @parameter%addPair : bool : mutez : @some : list operation : @parameter%addPair : @storage
                    GET 5;      # nat : bool : mutez : @some : list operation : @parameter%addPair : @storage
                    PAIR;       # pair nat bool : mutez : @some : list operation : @parameter%addPair : @storage
                    DUP 5;      # @parameter%addPair : pair nat bool : mutez : @some : list operation : @parameter%addPair : @storage
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : pair nat bool : mutez : @some : list operation : @parameter%addPair : @storage
                    GET 4;      # address : pair nat bool : mutez : @some : list operation : @parameter%addPair : @storage
                    PAIR;       # pair address (pair nat bool) : mutez : @some : list operation : @parameter%addPair : @storage
                    DIG 4;      # @parameter%addPair : pair address (pair nat bool) : mutez : @some : list operation : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : pair address (pair nat bool) : mutez : @some : list operation : @storage
                    GET 3;      # pair (option %token1Precision nat) (pair (bool %token1Type) (address %token2Address)) : @parameter%addPair : pair address (pair nat bool) : mutez : @some : list operation : @storage
                    GET 3;      # bool : @parameter%addPair : pair address (pair nat bool) : mutez : @some : list operation : @storage
                    SWAP;       # @parameter%addPair : bool : pair address (pair nat bool) : mutez : @some : list operation : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : bool : pair address (pair nat bool) : mutez : @some : list operation : @storage
                    DUG 6;      # @parameter%addPair : bool : pair address (pair nat bool) : mutez : @some : list operation : @parameter%addPair : @storage
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : bool : pair address (pair nat bool) : mutez : @some : list operation : @parameter%addPair : @storage
                    GET 6;      # nat : bool : pair address (pair nat bool) : mutez : @some : list operation : @parameter%addPair : @storage
                    PAIR;       # pair nat bool : pair address (pair nat bool) : mutez : @some : list operation : @parameter%addPair : @storage
                    PAIR;       # pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @parameter%addPair : @storage
                    DUP 5;      # @parameter%addPair : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @parameter%addPair : @storage
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @parameter%addPair : @storage
                    GET 5;      # address : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @parameter%addPair : @storage
                    PUSH bool True; # bool : address : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @parameter%addPair : @storage
                    PAIR;       # pair bool address : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @parameter%addPair : @storage
                    DIG 5;      # @parameter%addPair : pair bool address : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @storage
                    DUP;        # @parameter%addPair : @parameter%addPair : pair bool address : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @storage
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : @parameter%addPair : pair bool address : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @storage
                    CAR;        # pair (address %exchangeAddress) (address %lpTokenAddress) : @parameter%addPair : pair bool address : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @storage
                    CDR;        # address : @parameter%addPair : pair bool address : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @storage
                    SWAP;       # @parameter%addPair : address : pair bool address : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @storage
                    CAR;        # pair (pair (address %exchangeAddress) (address %lpTokenAddress)) (pair (bool %stableType) (pair (address %token1Address) (nat %token1Id))) : address : pair bool address : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @storage
                    CAR;        # pair (address %exchangeAddress) (address %lpTokenAddress) : address : pair bool address : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @storage
                    CAR;        # address : address : pair bool address : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @storage
                    PAIR;       # pair address address : pair bool address : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @storage
                    PAIR;       # pair (pair address address) (pair bool address) : pair (pair nat bool) (pair address (pair nat bool)) : mutez : @some : list operation : @storage
                    PAIR;       # pair (pair (pair address address) (pair bool address)) (pair (pair nat bool) (pair address (pair nat bool))) : mutez : @some : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }; # list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
              }
              {
                SWAP;       # @storage : @parameter%changeAdminAddress
                # == changeAdminAddress ==
                # sp.verify(sp.sender == self.data.adminAddress) # @storage : @parameter%changeAdminAddress
                DUP;        # @storage : @storage : @parameter%changeAdminAddress
                DUG 2;      # @storage : @parameter%changeAdminAddress : @storage
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : @parameter%changeAdminAddress : @storage
                CAR;        # pair (address %adminAddress) (bool %paused) : @parameter%changeAdminAddress : @storage
                CAR;        # address : @parameter%changeAdminAddress : @storage
                SENDER;     # @sender : address : @parameter%changeAdminAddress : @storage
                COMPARE;    # int : @parameter%changeAdminAddress : @storage
                EQ;         # bool : @parameter%changeAdminAddress : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: sp.sender == self.data.adminAddress"; # string : @parameter%changeAdminAddress : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%changeAdminAddress : @storage
                SWAP;       # @storage : @parameter%changeAdminAddress
                # self.data.adminAddress = params # @storage : @parameter%changeAdminAddress
                UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%changeAdminAddress
                UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%changeAdminAddress
                CDR;        # bool : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%changeAdminAddress
                DIG 3;      # @parameter%changeAdminAddress : bool : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                PAIR;       # pair @parameter%changeAdminAddress bool : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                PAIR;       # pair (pair @parameter%changeAdminAddress bool) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                PAIR;       # pair (pair (pair @parameter%changeAdminAddress bool) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                NIL operation; # list operation : pair (pair (pair @parameter%changeAdminAddress bool) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
              }; # list operation : pair (pair (pair address bool) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
          }
          {
            IF_LEFT
              {
                DROP;       # @storage
                # == changeDeployerState ==
                # sp.verify(sp.sender == self.data.adminAddress) # @storage
                DUP;        # @storage : @storage
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : @storage
                CAR;        # pair (address %adminAddress) (bool %paused) : @storage
                CAR;        # address : @storage
                SENDER;     # @sender : address : @storage
                COMPARE;    # int : @storage
                EQ;         # bool : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: sp.sender == self.data.adminAddress"; # string : @storage
                    FAILWITH;   # FAILED
                  }; # @storage
                # self.data.paused = ~ self.data.paused # @storage
                DUP;        # @storage : @storage
                UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @storage
                UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @storage
                CAR;        # address : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @storage
                DIG 3;      # @storage : address : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : address : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                CAR;        # pair (address %adminAddress) (bool %paused) : address : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                CDR;        # bool : address : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                NOT;        # bool : address : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                SWAP;       # address : bool : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                PAIR;       # pair address bool : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                PAIR;       # pair (pair address bool) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                PAIR;       # pair (pair (pair address bool) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                NIL operation; # list operation : pair (pair (pair address bool) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
              }
              {
                SWAP;       # @storage : @parameter%deployStablePair
                # == deployStablePair ==
                # sp.verify(~ self.data.paused) # @storage : @parameter%deployStablePair
                DUP;        # @storage : @storage : @parameter%deployStablePair
                DUG 2;      # @storage : @parameter%deployStablePair : @storage
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair : @storage
                CAR;        # pair (address %adminAddress) (bool %paused) : @parameter%deployStablePair : @storage
                CDR;        # bool : @parameter%deployStablePair : @storage
                IF
                  {
                    PUSH string "WrongCondition: ~ self.data.paused"; # string : @parameter%deployStablePair : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%deployStablePair : @storage
                SWAP;       # @storage : @parameter%deployStablePair
                # if ~ (self.data.stableRegistry.contains(params.token1Address)): # @storage : @parameter%deployStablePair
                DUP;        # @storage : @storage : @parameter%deployStablePair
                DUG 2;      # @storage : @parameter%deployStablePair : @storage
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair : @storage
                GET 6;      # big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : @storage
                SWAP;       # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : @storage
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : @storage
                DUG 2;      # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : @storage
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : @storage
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : @storage
                CAR;        # address : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : @storage
                MEM;        # bool : @parameter%deployStablePair : @storage
                IF
                  {}
                  {
                    SWAP;       # @storage : @parameter%deployStablePair
                    # self.data.stableRegistry[params.token1Address] = {} # @storage : @parameter%deployStablePair
                    UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # address : pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PUSH (option (map nat (map address (map nat address)))) (Some {}); # option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP 7;      # @parameter%deployStablePair : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    SWAP;       # @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                  }; # @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                # if ~ (self.data.stableRegistry.contains(params.token2Address)): # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                DUP;        # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                DUG 2;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 6;      # big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 6;      # address : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                MEM;        # bool : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF
                  {}
                  {
                    SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    # self.data.stableRegistry[params.token2Address] = {} # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PUSH (option (map nat (map address (map nat address)))) (Some {}); # option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP 7;      # @parameter%deployStablePair : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET 6;      # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    SWAP;       # @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                  }; # @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                # if ~ (self.data.stableRegistry[params.token1Address].contains(params.token1Id)): # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                DUP;        # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                DUG 2;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 6;      # big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # address : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET;        # option (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF_NONE
                  {
                    PUSH int 318; # int : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 4;      # nat : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                MEM;        # bool : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF
                  {}
                  {
                    SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    # self.data.stableRegistry[params.token1Address][params.token1Id] = {} # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP 7;      # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    IF_NONE
                      {
                        PUSH int 320; # int : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PUSH (option (map address (map nat address))) (Some {}); # option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP 9;      # @parameter%deployStablePair : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET 4;      # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    SWAP;       # @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                  }; # @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                # if ~ (self.data.stableRegistry[params.token2Address].contains(params.token2Id)): # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                DUP;        # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                DUG 2;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 6;      # big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 6;      # address : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET;        # option (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF_NONE
                  {
                    PUSH int 318; # int : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # pair (nat %token2Amount) (pair (nat %token2Id) (nat %token2Precision)) : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # nat : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                MEM;        # bool : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF
                  {}
                  {
                    SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    # self.data.stableRegistry[params.token2Address][params.token2Id] = {} # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP 7;      # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET 6;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    IF_NONE
                      {
                        PUSH int 320; # int : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PUSH (option (map address (map nat address))) (Some {}); # option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP 9;      # @parameter%deployStablePair : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET 3;      # pair (nat %token2Amount) (pair (nat %token2Id) (nat %token2Precision)) : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET 3;      # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    SWAP;       # @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                  }; # @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                # if ~ (self.data.stableRegistry[params.token1Address][params.token1Id].contains(params.token2Address)): # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                DUP;        # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                DUG 2;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 6;      # big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # address : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET;        # option (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF_NONE
                  {
                    PUSH int 324; # int : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 4;      # nat : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET;        # option (map address (map nat address)) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF_NONE
                  {
                    PUSH int 324; # int : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 6;      # address : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                MEM;        # bool : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF
                  {}
                  {
                    SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    # self.data.stableRegistry[params.token1Address][params.token1Id][params.token2Address] = {} # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP 7;      # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    IF_NONE
                      {
                        PUSH int 326; # int : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP 9;      # @parameter%deployStablePair : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET 4;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    IF_NONE
                      {
                        PUSH int 326; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PUSH (option (map nat address)) (Some {}); # option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP 11;     # @parameter%deployStablePair : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET 6;      # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    SWAP;       # @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                  }; # @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                # if ~ (self.data.stableRegistry[params.token2Address][params.token2Id].contains(params.token1Address)): # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                DUP;        # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                DUG 2;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 6;      # big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 6;      # address : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET;        # option (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF_NONE
                  {
                    PUSH int 324; # int : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # pair (nat %token2Amount) (pair (nat %token2Id) (nat %token2Precision)) : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # nat : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET;        # option (map address (map nat address)) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF_NONE
                  {
                    PUSH int 324; # int : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # address : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                MEM;        # bool : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF
                  {}
                  {
                    SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    # self.data.stableRegistry[params.token2Address][params.token2Id][params.token1Address] = {} # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP 7;      # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET 6;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    IF_NONE
                      {
                        PUSH int 326; # int : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP 9;      # @parameter%deployStablePair : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET 3;      # pair (nat %token2Amount) (pair (nat %token2Id) (nat %token2Precision)) : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET 3;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    IF_NONE
                      {
                        PUSH int 326; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PUSH (option (map nat address)) (Some {}); # option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    DUP 11;     # @parameter%deployStablePair : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    CAR;        # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%deployStablePair
                    PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                    SWAP;       # @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                  }; # @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                # sp.verify(~ (self.data.stableRegistry[params.token1Address][params.token1Id][params.token2Address].contains(params.token2Id)), 'PairExist') # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                DUP;        # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair
                DUG 2;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 6;      # big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # address : big_map address (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET;        # option (map nat (map address (map nat address))) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF_NONE
                  {
                    PUSH int 126; # int : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 4;      # nat : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET;        # option (map address (map nat address)) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF_NONE
                  {
                    PUSH int 126; # int : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 6;      # address : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET;        # option (map nat address) : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF_NONE
                  {
                    PUSH int 126; # int : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : @some : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # @parameter%deployStablePair : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # pair (nat %token2Amount) (pair (nat %token2Id) (nat %token2Precision)) : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # nat : @some : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                MEM;        # bool : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF
                  {
                    PUSH string "PairExist"; # string : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                # create_contract_tokenDeployer_128 = sp.local("create_contract_tokenDeployer_128", create contract ...) # @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                NIL operation; # list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PUSH nat 0; # nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                EMPTY_BIG_MAP nat (pair nat (map string bytes)); # big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                EMPTY_MAP string bytes; # map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP 6;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol)) : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SOME;       # option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PUSH string "decimals"; # string : option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                UPDATE;     # map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP 5;      # @parameter%deployStablePair : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 7;      # bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SOME;       # option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PUSH string "name"; # string : option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                UPDATE;     # map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP 6;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol)) : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 4;      # bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SOME;       # option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PUSH string "symbol"; # string : option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                UPDATE;     # map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP 6;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol)) : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SOME;       # option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PUSH string "icon"; # string : option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                UPDATE;     # map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PUSH nat 0; # nat : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair nat (map string bytes) : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SOME;       # option (pair nat (map string bytes)) : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PUSH nat 0; # nat : option (pair nat (map string bytes)) : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                UPDATE;     # big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PUSH bool False; # bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                EMPTY_BIG_MAP string bytes; # big_map string bytes : bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP 6;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : big_map string bytes : bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : big_map string bytes : bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 5;      # bytes : big_map string bytes : bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SOME;       # option bytes : big_map string bytes : bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PUSH string ""; # string : option bytes : big_map string bytes : bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                UPDATE;     # big_map string bytes : bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair (big_map string bytes) bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                EMPTY_BIG_MAP address (pair (map address nat) nat); # big_map address (pair (map address nat) nat) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP 5;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : big_map address (pair (map address nat) nat) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : big_map address (pair (map address nat) nat) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # address : big_map address (pair (map address nat) nat) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP 5;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PUSH mutez 0; # mutez : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                NONE key_hash; # option key_hash : mutez : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CREATE_CONTRACT
                 { parameter (or (or (or (pair %RecoverExcessToken (pair (nat %amount) (bool %faTwoCheck)) (pair (address %reciever) (pair (address %tokenAddress) (nat %tokenId)))) (pair %approve (address %spender) (nat %value))) (or (pair %burn (address %address) (nat %value)) (or (pair %getAdministrator unit (contract address)) (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat))))) (or (or (pair %getBalance address (contract nat)) (or (pair %getTotalSupply unit (contract nat)) (pair %mint (address %address) (nat %value)))) (or (address %setAdministrator) (or (pair %transfer (address %from) (pair (address %to) (nat %value))) (address %updateExchangeAddress)))));
                   storage   (pair (pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))));
                   code
                     {
                       UNPAIR;     # @parameter : @storage
                       IF_LEFT
                         {
                           IF_LEFT
                             {
                               IF_LEFT
                                 {
                                   SWAP;       # @storage : @parameter%RecoverExcessToken
                                   # == RecoverExcessToken ==
                                   # sp.verify(sp.sender == self.data.administrator, 'FA1.2_Not_Admin') # @storage : @parameter%RecoverExcessToken
                                   DUP;        # @storage : @storage : @parameter%RecoverExcessToken
                                   DUG 2;      # @storage : @parameter%RecoverExcessToken : @storage
                                   CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%RecoverExcessToken : @storage
                                   CAR;        # address : @parameter%RecoverExcessToken : @storage
                                   SENDER;     # @sender : address : @parameter%RecoverExcessToken : @storage
                                   COMPARE;    # int : @parameter%RecoverExcessToken : @storage
                                   EQ;         # bool : @parameter%RecoverExcessToken : @storage
                                   IF
                                     {}
                                     {
                                       PUSH string "FA1.2_Not_Admin"; # string : @parameter%RecoverExcessToken : @storage
                                       FAILWITH;   # FAILED
                                     }; # @parameter%RecoverExcessToken : @storage
                                   # sp.verify(params.amount > 0, 'Zero_Transfer') # @parameter%RecoverExcessToken : @storage
                                   DUP;        # @parameter%RecoverExcessToken : @parameter%RecoverExcessToken : @storage
                                   CAR;        # pair (nat %amount) (bool %faTwoCheck) : @parameter%RecoverExcessToken : @storage
                                   CAR;        # nat : @parameter%RecoverExcessToken : @storage
                                   PUSH nat 0; # nat : nat : @parameter%RecoverExcessToken : @storage
                                   COMPARE;    # int : @parameter%RecoverExcessToken : @storage
                                   LT;         # bool : @parameter%RecoverExcessToken : @storage
                                   IF
                                     {}
                                     {
                                       PUSH string "Zero_Transfer"; # string : @parameter%RecoverExcessToken : @storage
                                       FAILWITH;   # FAILED
                                     }; # @parameter%RecoverExcessToken : @storage
                                   # if params.faTwoCheck: # @parameter%RecoverExcessToken : @storage
                                   DUP;        # @parameter%RecoverExcessToken : @parameter%RecoverExcessToken : @storage
                                   CAR;        # pair (nat %amount) (bool %faTwoCheck) : @parameter%RecoverExcessToken : @storage
                                   CDR;        # bool : @parameter%RecoverExcessToken : @storage
                                   IF
                                     {
                                       # sp.transfer(sp.list([sp.record(from_ = sp.self_address, txs = sp.list([sp.record(to_ = params.reciever, token_id = params.tokenId, amount = params.amount)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), params.tokenAddress, entry_point='transfer').open_some()) # @parameter%RecoverExcessToken : @storage
                                       DUP;        # @parameter%RecoverExcessToken : @parameter%RecoverExcessToken : @storage
                                       GET 5;      # address : @parameter%RecoverExcessToken : @storage
                                       CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : @parameter%RecoverExcessToken : @storage
                                       IF_NONE
                                         {
                                           PUSH int 31; # int : @parameter%RecoverExcessToken : @storage
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : @parameter%RecoverExcessToken : @storage
                                       NIL operation; # list operation : @some : @parameter%RecoverExcessToken : @storage
                                       SWAP;       # @some : list operation : @parameter%RecoverExcessToken : @storage
                                       PUSH mutez 0; # mutez : @some : list operation : @parameter%RecoverExcessToken : @storage
                                       NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%RecoverExcessToken : @storage
                                       NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%RecoverExcessToken : @storage
                                       DIG 5;      # @parameter%RecoverExcessToken : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       DUP;        # @parameter%RecoverExcessToken : @parameter%RecoverExcessToken : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       CAR;        # pair (nat %amount) (bool %faTwoCheck) : @parameter%RecoverExcessToken : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       CAR;        # nat : @parameter%RecoverExcessToken : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       SWAP;       # @parameter%RecoverExcessToken : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       DUP;        # @parameter%RecoverExcessToken : @parameter%RecoverExcessToken : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       GET 6;      # nat : @parameter%RecoverExcessToken : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       SWAP;       # @parameter%RecoverExcessToken : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       GET 3;      # address : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       PAIR 3;     # pair address (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       PAIR;       # pair @self (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       TRANSFER_TOKENS; # operation : list operation : @storage
                                       CONS;       # list operation : @storage
                                     }
                                     {
                                       # sp.transfer(sp.record(from_ = sp.self_address, to_ = params.reciever, value = params.amount), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), params.tokenAddress, entry_point='transfer').open_some()) # @parameter%RecoverExcessToken : @storage
                                       DUP;        # @parameter%RecoverExcessToken : @parameter%RecoverExcessToken : @storage
                                       GET 5;      # address : @parameter%RecoverExcessToken : @storage
                                       CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : @parameter%RecoverExcessToken : @storage
                                       IF_NONE
                                         {
                                           PUSH int 55; # int : @parameter%RecoverExcessToken : @storage
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : @parameter%RecoverExcessToken : @storage
                                       NIL operation; # list operation : @some : @parameter%RecoverExcessToken : @storage
                                       SWAP;       # @some : list operation : @parameter%RecoverExcessToken : @storage
                                       PUSH mutez 0; # mutez : @some : list operation : @parameter%RecoverExcessToken : @storage
                                       DIG 3;      # @parameter%RecoverExcessToken : mutez : @some : list operation : @storage
                                       DUP;        # @parameter%RecoverExcessToken : @parameter%RecoverExcessToken : mutez : @some : list operation : @storage
                                       CAR;        # pair (nat %amount) (bool %faTwoCheck) : @parameter%RecoverExcessToken : mutez : @some : list operation : @storage
                                       CAR;        # nat : @parameter%RecoverExcessToken : mutez : @some : list operation : @storage
                                       SWAP;       # @parameter%RecoverExcessToken : nat : mutez : @some : list operation : @storage
                                       GET 3;      # address : nat : mutez : @some : list operation : @storage
                                       SELF_ADDRESS; # @self : address : nat : mutez : @some : list operation : @storage
                                       PAIR 3;     # pair @self (pair address nat) : mutez : @some : list operation : @storage
                                       TRANSFER_TOKENS; # operation : list operation : @storage
                                       CONS;       # list operation : @storage
                                     }; # list operation : @storage
                                 }
                                 {
                                   SWAP;       # @storage : @parameter%approve
                                   # == approve ==
                                   # if ~ (self.data.ledger.contains(sp.sender)): # @storage : @parameter%approve
                                   DUP;        # @storage : @storage : @parameter%approve
                                   DUG 2;      # @storage : @parameter%approve : @storage
                                   CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%approve : @storage
                                   GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%approve : @storage
                                   SENDER;     # @sender : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%approve : @storage
                                   MEM;        # bool : @parameter%approve : @storage
                                   IF
                                     {}
                                     {
                                       SWAP;       # @storage : @parameter%approve
                                       # self.data.ledger[sp.sender] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%approve
                                       UNPAIR;     # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       UNPAIR;     # address : pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       SWAP;       # pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       UNPAIR;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       SWAP;       # big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       SENDER;     # @sender : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                                       SWAP;       # @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                     }; # @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   # sp.verify((self.data.ledger[sp.sender].approvals.get(params.spender, default_value = 0) == 0) | (params.value == 0), 'FA1.2_Unsafe_Allowance_Change') # @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   PUSH nat 0; # nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   DUP 3;      # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   CAR;        # pair address (pair address (big_map address (pair (map address nat) nat))) : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   GET 4;      # big_map address (pair (map address nat) nat) : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   SENDER;     # @sender : big_map address (pair (map address nat) nat) : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   GET;        # option (pair (map address nat) nat) : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   IF_NONE
                                     {
                                       PUSH int 126; # int : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   CAR;        # map address nat : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   DUP 3;      # @parameter%approve : map address nat : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   CAR;        # address : map address nat : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   GET;        # option nat : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   IF_NONE
                                     {
                                       PUSH nat 0; # nat : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                     }
                                     {}; # nat : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   COMPARE;    # int : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   EQ;         # bool : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   IF
                                     {
                                       PUSH bool True; # bool : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                     }
                                     {
                                       DUP;        # @parameter%approve : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CDR;        # nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       PUSH nat 0; # nat : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       COMPARE;    # int : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       EQ;         # bool : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                     }; # bool : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   IF
                                     {}
                                     {
                                       PUSH string "FA1.2_Unsafe_Allowance_Change"; # string : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       FAILWITH;   # FAILED
                                     }; # @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   SWAP;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                                   # self.data.ledger[sp.sender].approvals[params.spender] = params.value # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                                   UNPAIR;     # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   UNPAIR;     # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   SWAP;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   UNPAIR;     # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   SWAP;       # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   SENDER;     # @sender : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   DUP;        # @sender : @sender : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   DUG 2;      # @sender : big_map address (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   GET;        # option (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   IF_NONE
                                     {
                                       PUSH int 128; # int : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   DUP;        # @some : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   CAR;        # map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   DUP 8;      # @parameter%approve : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   CDR;        # nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   SOME;       # option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   DIG 8;      # @parameter%approve : option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   CAR;        # address : option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   UPDATE;     # map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   UPDATE 1;   # @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   SOME;       # option (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   SWAP;       # @sender : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   NIL operation; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                 }; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                             }
                             {
                               IF_LEFT
                                 {
                                   SWAP;       # @storage : @parameter%burn
                                   # == burn ==
                                   # sp.verify(sp.sender == self.data.exchangeAddress, 'FA1.2_Not_Exchange') # @storage : @parameter%burn
                                   DUP;        # @storage : @storage : @parameter%burn
                                   DUG 2;      # @storage : @parameter%burn : @storage
                                   CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%burn : @storage
                                   GET 3;      # address : @parameter%burn : @storage
                                   SENDER;     # @sender : address : @parameter%burn : @storage
                                   COMPARE;    # int : @parameter%burn : @storage
                                   EQ;         # bool : @parameter%burn : @storage
                                   IF
                                     {}
                                     {
                                       PUSH string "FA1.2_Not_Exchange"; # string : @parameter%burn : @storage
                                       FAILWITH;   # FAILED
                                     }; # @parameter%burn : @storage
                                   # sp.verify(self.data.ledger[params.address].balance >= params.value, 'FA1.2_Insufficient_Balance') # @parameter%burn : @storage
                                   DUP;        # @parameter%burn : @parameter%burn : @storage
                                   CDR;        # nat : @parameter%burn : @storage
                                   DUP 3;      # @storage : nat : @parameter%burn : @storage
                                   CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : nat : @parameter%burn : @storage
                                   GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                                   DUP 3;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                                   CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                                   GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                                   IF_NONE
                                     {
                                       PUSH int 171; # int : nat : @parameter%burn : @storage
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : nat : @parameter%burn : @storage
                                   CDR;        # nat : nat : @parameter%burn : @storage
                                   COMPARE;    # int : @parameter%burn : @storage
                                   GE;         # bool : @parameter%burn : @storage
                                   IF
                                     {}
                                     {
                                       PUSH string "FA1.2_Insufficient_Balance"; # string : @parameter%burn : @storage
                                       FAILWITH;   # FAILED
                                     }; # @parameter%burn : @storage
                                   SWAP;       # @storage : @parameter%burn
                                   # self.data.ledger[params.address].balance = sp.as_nat(self.data.ledger[params.address].balance - params.value) # @storage : @parameter%burn
                                   DUP;        # @storage : @storage : @parameter%burn
                                   DUG 2;      # @storage : @parameter%burn : @storage
                                   UNPAIR;     # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   UNPAIR;     # address : pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   SWAP;       # pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   UNPAIR;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   SWAP;       # big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   DUP;        # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   DUP 6;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   DUP;        # address : address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   DUG 2;      # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   GET;        # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   IF_NONE
                                     {
                                       PUSH int 173; # int : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   DUP 7;      # @parameter%burn : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   CDR;        # nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   DIG 8;      # @storage : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   DUP 9;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   IF_NONE
                                     {
                                       PUSH int 173; # int : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   CDR;        # nat : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   SUB;        # int : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   ISNAT;      # option nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   IF_NONE
                                     {
                                       PUSH int 173; # int : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   UPDATE 2;   # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   SOME;       # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   SWAP;       # address : option (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   UPDATE;     # big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   SWAP;       # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   PAIR;       # pair address (big_map address (pair (map %approvals address nat) (nat %balance))) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   SWAP;       # address : pair address (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   PAIR;       # pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   PAIR;       # pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%burn
                                   # self.data.totalSupply = sp.as_nat(self.data.totalSupply - params.value) # pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%burn
                                   DUP;        # pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%burn
                                   DUG 2;      # pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%burn : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   SWAP;       # @parameter%burn : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   CDR;        # nat : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   DIG 2;      # pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   GET 6;      # nat : nat : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   SUB;        # int : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   ISNAT;      # option nat : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   IF_NONE
                                     {
                                       PUSH int 174; # int : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   UPDATE 6;   # pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   NIL operation; # list operation : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                 }
                                 {
                                   IF_LEFT
                                     {
                                       SWAP;       # @storage : @parameter%getAdministrator
                                       # == getAdministrator ==
                                       # sp.result(self.data.administrator) # @storage : @parameter%getAdministrator
                                       DUP;        # @storage : @storage : @parameter%getAdministrator
                                       DUG 2;      # @storage : @parameter%getAdministrator : @storage
                                       CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%getAdministrator : @storage
                                       CAR;        # address : @parameter%getAdministrator : @storage
                                       # sp.transfer(__s5.value, sp.tez(0), sp.snd(params)) # address : @parameter%getAdministrator : @storage
                                       NIL operation; # list operation : address : @parameter%getAdministrator : @storage
                                       DIG 2;      # @parameter%getAdministrator : list operation : address : @storage
                                       CDR;        # contract address : list operation : address : @storage
                                       PUSH mutez 0; # mutez : contract address : list operation : address : @storage
                                       DIG 3;      # address : mutez : contract address : list operation : @storage
                                       TRANSFER_TOKENS; # operation : list operation : @storage
                                       CONS;       # list operation : @storage
                                     }
                                     {
                                       SWAP;       # @storage : @parameter%getAllowance
                                       # == getAllowance ==
                                       # if self.data.ledger.contains(sp.fst(params).owner): # @storage : @parameter%getAllowance
                                       DUP;        # @storage : @storage : @parameter%getAllowance
                                       DUG 2;      # @storage : @parameter%getAllowance : @storage
                                       CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%getAllowance : @storage
                                       GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                       SWAP;       # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUP;        # @parameter%getAllowance : @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUG 2;      # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                       CAR;        # pair (address %owner) (address %spender) : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                       CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                       MEM;        # bool : @parameter%getAllowance : @storage
                                       IF
                                         {
                                           SWAP;       # @storage : @parameter%getAllowance
                                           # sp.result(self.data.ledger[sp.fst(params).owner].approvals.get(sp.fst(params).spender, default_value = 0)) # @storage : @parameter%getAllowance
                                           DUP;        # @storage : @storage : @parameter%getAllowance
                                           DUG 2;      # @storage : @parameter%getAllowance : @storage
                                           CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%getAllowance : @storage
                                           GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                           SWAP;       # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                           DUP;        # @parameter%getAllowance : @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                           DUG 2;      # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                           CAR;        # pair (address %owner) (address %spender) : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                           CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                           GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                           IF_NONE
                                             {
                                               PUSH int 144; # int : @parameter%getAllowance : @storage
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : @parameter%getAllowance : @storage
                                           CAR;        # map address nat : @parameter%getAllowance : @storage
                                           SWAP;       # @parameter%getAllowance : map address nat : @storage
                                           DUP;        # @parameter%getAllowance : @parameter%getAllowance : map address nat : @storage
                                           DUG 2;      # @parameter%getAllowance : map address nat : @parameter%getAllowance : @storage
                                           CAR;        # pair (address %owner) (address %spender) : map address nat : @parameter%getAllowance : @storage
                                           CDR;        # address : map address nat : @parameter%getAllowance : @storage
                                           GET;        # option nat : @parameter%getAllowance : @storage
                                           IF_NONE
                                             {
                                               PUSH nat 0; # nat : @parameter%getAllowance : @storage
                                             }
                                             {}; # nat : @parameter%getAllowance : @storage
                                         }
                                         {
                                           # sp.result(0) # @parameter%getAllowance : @storage
                                           PUSH nat 0; # nat : @parameter%getAllowance : @storage
                                         }; # nat : @parameter%getAllowance : @storage
                                       # sp.transfer(__s6.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getAllowance : @storage
                                       NIL operation; # list operation : nat : @parameter%getAllowance : @storage
                                       DIG 2;      # @parameter%getAllowance : list operation : nat : @storage
                                       CDR;        # contract nat : list operation : nat : @storage
                                       PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                                       DIG 3;      # nat : mutez : contract nat : list operation : @storage
                                       TRANSFER_TOKENS; # operation : list operation : @storage
                                       CONS;       # list operation : @storage
                                     }; # list operation : @storage
                                 }; # list operation : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                             }; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                         }
                         {
                           IF_LEFT
                             {
                               IF_LEFT
                                 {
                                   SWAP;       # @storage : @parameter%getBalance
                                   # == getBalance ==
                                   # if self.data.ledger.contains(sp.fst(params)): # @storage : @parameter%getBalance
                                   DUP;        # @storage : @storage : @parameter%getBalance
                                   DUG 2;      # @storage : @parameter%getBalance : @storage
                                   CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%getBalance : @storage
                                   GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                                   SWAP;       # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                   DUP;        # @parameter%getBalance : @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                   DUG 2;      # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                                   CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                                   MEM;        # bool : @parameter%getBalance : @storage
                                   IF
                                     {
                                       SWAP;       # @storage : @parameter%getBalance
                                       # sp.result(self.data.ledger[sp.fst(params)].balance) # @storage : @parameter%getBalance
                                       DUP;        # @storage : @storage : @parameter%getBalance
                                       DUG 2;      # @storage : @parameter%getBalance : @storage
                                       CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%getBalance : @storage
                                       GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                                       SWAP;       # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUP;        # @parameter%getBalance : @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUG 2;      # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                                       CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                                       GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                                       IF_NONE
                                         {
                                           PUSH int 137; # int : @parameter%getBalance : @storage
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : @parameter%getBalance : @storage
                                       CDR;        # nat : @parameter%getBalance : @storage
                                     }
                                     {
                                       # sp.result(0) # @parameter%getBalance : @storage
                                       PUSH nat 0; # nat : @parameter%getBalance : @storage
                                     }; # nat : @parameter%getBalance : @storage
                                   # sp.transfer(__s7.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getBalance : @storage
                                   NIL operation; # list operation : nat : @parameter%getBalance : @storage
                                   DIG 2;      # @parameter%getBalance : list operation : nat : @storage
                                   CDR;        # contract nat : list operation : nat : @storage
                                   PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                                   DIG 3;      # nat : mutez : contract nat : list operation : @storage
                                   TRANSFER_TOKENS; # operation : list operation : @storage
                                   CONS;       # list operation : @storage
                                 }
                                 {
                                   IF_LEFT
                                     {
                                       SWAP;       # @storage : @parameter%getTotalSupply
                                       # == getTotalSupply ==
                                       # sp.result(self.data.totalSupply) # @storage : @parameter%getTotalSupply
                                       DUP;        # @storage : @storage : @parameter%getTotalSupply
                                       DUG 2;      # @storage : @parameter%getTotalSupply : @storage
                                       GET 6;      # nat : @parameter%getTotalSupply : @storage
                                       # sp.transfer(__s8.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getTotalSupply : @storage
                                       NIL operation; # list operation : nat : @parameter%getTotalSupply : @storage
                                       DIG 2;      # @parameter%getTotalSupply : list operation : nat : @storage
                                       CDR;        # contract nat : list operation : nat : @storage
                                       PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                                       DIG 3;      # nat : mutez : contract nat : list operation : @storage
                                       TRANSFER_TOKENS; # operation : list operation : @storage
                                       CONS;       # list operation : @storage
                                     }
                                     {
                                       SWAP;       # @storage : @parameter%mint
                                       # == mint ==
                                       # sp.verify(sp.sender == self.data.exchangeAddress, 'FA1.2_Not_Exchange') # @storage : @parameter%mint
                                       DUP;        # @storage : @storage : @parameter%mint
                                       DUG 2;      # @storage : @parameter%mint : @storage
                                       CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%mint : @storage
                                       GET 3;      # address : @parameter%mint : @storage
                                       SENDER;     # @sender : address : @parameter%mint : @storage
                                       COMPARE;    # int : @parameter%mint : @storage
                                       EQ;         # bool : @parameter%mint : @storage
                                       IF
                                         {}
                                         {
                                           PUSH string "FA1.2_Not_Exchange"; # string : @parameter%mint : @storage
                                           FAILWITH;   # FAILED
                                         }; # @parameter%mint : @storage
                                       SWAP;       # @storage : @parameter%mint
                                       # if ~ (self.data.ledger.contains(params.address)): # @storage : @parameter%mint
                                       DUP;        # @storage : @storage : @parameter%mint
                                       DUG 2;      # @storage : @parameter%mint : @storage
                                       CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%mint : @storage
                                       GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                                       SWAP;       # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUP;        # @parameter%mint : @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUG 2;      # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                                       CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                                       MEM;        # bool : @parameter%mint : @storage
                                       IF
                                         {}
                                         {
                                           SWAP;       # @storage : @parameter%mint
                                           # self.data.ledger[params.address] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%mint
                                           UNPAIR;     # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           UNPAIR;     # address : pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           SWAP;       # pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           UNPAIR;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           SWAP;       # big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           DUP 6;      # @parameter%mint : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                                           SWAP;       # @parameter%mint : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                         }; # @parameter%mint : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SWAP;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                                       # self.data.ledger[params.address].balance += params.value # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                                       UNPAIR;     # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       UNPAIR;     # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       SWAP;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       UNPAIR;     # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       SWAP;       # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       DUP 6;      # @parameter%mint : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       IF_NONE
                                         {
                                           PUSH int 162; # int : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       DUP 8;      # @parameter%mint : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                                       # self.data.totalSupply += params.value # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                                       DUP;        # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                                       GET 6;      # nat : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                                       DIG 2;      # @parameter%mint : nat : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CDR;        # nat : nat : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       ADD;        # nat : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       UPDATE 6;   # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       NIL operation; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                     }; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                 }; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                             }
                             {
                               IF_LEFT
                                 {
                                   SWAP;       # @storage : @parameter%setAdministrator
                                   # == setAdministrator ==
                                   # sp.verify(sp.sender == self.data.administrator, 'FA1.2_Not_Admin') # @storage : @parameter%setAdministrator
                                   DUP;        # @storage : @storage : @parameter%setAdministrator
                                   DUG 2;      # @storage : @parameter%setAdministrator : @storage
                                   CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%setAdministrator : @storage
                                   CAR;        # address : @parameter%setAdministrator : @storage
                                   SENDER;     # @sender : address : @parameter%setAdministrator : @storage
                                   COMPARE;    # int : @parameter%setAdministrator : @storage
                                   EQ;         # bool : @parameter%setAdministrator : @storage
                                   IF
                                     {}
                                     {
                                       PUSH string "FA1.2_Not_Admin"; # string : @parameter%setAdministrator : @storage
                                       FAILWITH;   # FAILED
                                     }; # @parameter%setAdministrator : @storage
                                   SWAP;       # @storage : @parameter%setAdministrator
                                   # self.data.administrator = params # @storage : @parameter%setAdministrator
                                   UNPAIR;     # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%setAdministrator
                                   CDR;        # pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%setAdministrator
                                   DIG 2;      # @parameter%setAdministrator : pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   PAIR;       # pair @parameter%setAdministrator (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   PAIR;       # pair (pair @parameter%setAdministrator (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                 }
                                 {
                                   IF_LEFT
                                     {
                                       # == transfer ==
                                       # sp.verify((params.from_ == sp.sender) | (self.data.ledger[params.from_].approvals[sp.sender] >= params.value), 'FA1.2_Not_Allowed') # @parameter%transfer : @storage
                                       DUP;        # @parameter%transfer : @parameter%transfer : @storage
                                       CAR;        # address : @parameter%transfer : @storage
                                       SENDER;     # @sender : address : @parameter%transfer : @storage
                                       COMPARE;    # int : @parameter%transfer : @storage
                                       EQ;         # bool : @parameter%transfer : @storage
                                       IF
                                         {
                                           PUSH bool True; # bool : @parameter%transfer : @storage
                                         }
                                         {
                                           DUP;        # @parameter%transfer : @parameter%transfer : @storage
                                           GET 4;      # nat : @parameter%transfer : @storage
                                           DUP 3;      # @storage : nat : @parameter%transfer : @storage
                                           CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : nat : @parameter%transfer : @storage
                                           GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                                           DUP 3;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                                           CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                                           GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                                           IF_NONE
                                             {
                                               PUSH int 107; # int : nat : @parameter%transfer : @storage
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : nat : @parameter%transfer : @storage
                                           CAR;        # map address nat : nat : @parameter%transfer : @storage
                                           SENDER;     # @sender : map address nat : nat : @parameter%transfer : @storage
                                           GET;        # option nat : nat : @parameter%transfer : @storage
                                           IF_NONE
                                             {
                                               PUSH int 107; # int : nat : @parameter%transfer : @storage
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : nat : @parameter%transfer : @storage
                                           COMPARE;    # int : @parameter%transfer : @storage
                                           GE;         # bool : @parameter%transfer : @storage
                                         }; # bool : @parameter%transfer : @storage
                                       IF
                                         {}
                                         {
                                           PUSH string "FA1.2_Not_Allowed"; # string : @parameter%transfer : @storage
                                           FAILWITH;   # FAILED
                                         }; # @parameter%transfer : @storage
                                       SWAP;       # @storage : @parameter%transfer
                                       # if ~ (self.data.ledger.contains(params.from_)): # @storage : @parameter%transfer
                                       DUP;        # @storage : @storage : @parameter%transfer
                                       DUG 2;      # @storage : @parameter%transfer : @storage
                                       CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%transfer : @storage
                                       GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                                       SWAP;       # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUG 2;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                                       CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                                       MEM;        # bool : @parameter%transfer : @storage
                                       IF
                                         {}
                                         {
                                           SWAP;       # @storage : @parameter%transfer
                                           # self.data.ledger[params.from_] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%transfer
                                           UNPAIR;     # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           UNPAIR;     # address : pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           UNPAIR;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           DUP 6;      # @parameter%transfer : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                           SWAP;       # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                         }; # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SWAP;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                       # if ~ (self.data.ledger.contains(params.to_)): # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                       DUP;        # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                       DUG 2;      # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CAR;        # pair address (pair address (big_map address (pair (map address nat) nat))) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET 4;      # big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SWAP;       # @parameter%transfer : big_map address (pair (map address nat) nat) : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map address nat) nat) : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUG 2;      # @parameter%transfer : big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET 3;      # address : big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       MEM;        # bool : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       IF
                                         {}
                                         {
                                           SWAP;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                           # self.data.ledger[params.to_] = sp.record(approvals = {}, balance = 0) # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                           UNPAIR;     # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           UNPAIR;     # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           UNPAIR;     # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           DUP 6;      # @parameter%transfer : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           GET 3;      # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                           SWAP;       # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                         }; # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       # sp.verify(params.value > 0, 'FA1.2_Zero_Transfer') # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # @parameter%transfer : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET 4;      # nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       PUSH nat 0; # nat : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       COMPARE;    # int : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       LT;         # bool : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       IF
                                         {}
                                         {
                                           PUSH string "FA1.2_Zero_Transfer"; # string : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           FAILWITH;   # FAILED
                                         }; # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       # sp.verify(params.from_ != params.to_, 'FA1.2_Same_Address_Transfer') # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # @parameter%transfer : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET 3;      # address : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SWAP;       # @parameter%transfer : address : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # @parameter%transfer : @parameter%transfer : address : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUG 2;      # @parameter%transfer : address : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CAR;        # address : address : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       COMPARE;    # int : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       NEQ;        # bool : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       IF
                                         {}
                                         {
                                           PUSH string "FA1.2_Same_Address_Transfer"; # string : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           FAILWITH;   # FAILED
                                         }; # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       # sp.verify(self.data.ledger[params.from_].balance >= params.value, 'FA1.2_Insufficient_Balance') # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # @parameter%transfer : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET 4;      # nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP 3;      # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CAR;        # pair address (pair address (big_map address (pair (map address nat) nat))) : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET 4;      # big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP 3;      # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CAR;        # address : big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET;        # option (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       IF_NONE
                                         {
                                           PUSH int 115; # int : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CDR;        # nat : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       COMPARE;    # int : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GE;         # bool : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       IF
                                         {}
                                         {
                                           PUSH string "FA1.2_Insufficient_Balance"; # string : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           FAILWITH;   # FAILED
                                         }; # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SWAP;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                       # self.data.ledger[params.from_].balance = sp.as_nat(self.data.ledger[params.from_].balance - params.value) # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                       DUP;        # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                       DUG 2;      # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       UNPAIR;     # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       UNPAIR;     # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SWAP;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       UNPAIR;     # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SWAP;       # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       IF_NONE
                                         {
                                           PUSH int 116; # int : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP 7;      # @parameter%transfer : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET 4;      # nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DIG 8;      # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       CAR;        # pair address (pair address (big_map address (pair (map address nat) nat))) : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       GET 4;      # big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       DUP 9;      # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       CAR;        # address : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       GET;        # option (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       IF_NONE
                                         {
                                           PUSH int 116; # int : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       SUB;        # int : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       ISNAT;      # option nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       IF_NONE
                                         {
                                           PUSH int 116; # int : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       # self.data.ledger[params.to_].balance += params.value # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       DUP 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       GET 3;      # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       IF_NONE
                                         {
                                           PUSH int 117; # int : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       DUP 8;      # @parameter%transfer : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       GET 4;      # nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                       SWAP;       # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       # if params.from_ != sp.sender: # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # @parameter%transfer : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CAR;        # address : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SENDER;     # @sender : address : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       COMPARE;    # int : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       NEQ;        # bool : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       IF
                                         {
                                           SWAP;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                           # self.data.ledger[params.from_].approvals[sp.sender] = sp.as_nat(self.data.ledger[params.from_].approvals[sp.sender] - params.value) # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                           DUP;        # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                           DUG 2;      # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           UNPAIR;     # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           UNPAIR;     # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           SWAP;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           UNPAIR;     # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           SWAP;       # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           DUP 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           IF_NONE
                                             {
                                               PUSH int 119; # int : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           CAR;        # map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           DUP 8;      # @parameter%transfer : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           GET 4;      # nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           DIG 9;      # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           CAR;        # pair address (pair address (big_map address (pair (map address nat) nat))) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           GET 4;      # big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           DIG 9;      # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           CAR;        # address : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           GET;        # option (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           IF_NONE
                                             {
                                               PUSH int 119; # int : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           CAR;        # map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SENDER;     # @sender : map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           GET;        # option nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           IF_NONE
                                             {
                                               PUSH int 119; # int : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SUB;        # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           ISNAT;      # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           IF_NONE
                                             {
                                               PUSH int 119; # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SOME;       # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SENDER;     # @sender : option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           UPDATE;     # map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           UPDATE 1;   # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                         }
                                         {
                                           DROP;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                         }; # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                     }
                                     {
                                       SWAP;       # @storage : @parameter%updateExchangeAddress
                                       # == updateExchangeAddress ==
                                       # sp.verify(sp.sender == self.data.administrator, 'FA1.2_Not_Admin') # @storage : @parameter%updateExchangeAddress
                                       DUP;        # @storage : @storage : @parameter%updateExchangeAddress
                                       DUG 2;      # @storage : @parameter%updateExchangeAddress : @storage
                                       CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%updateExchangeAddress : @storage
                                       CAR;        # address : @parameter%updateExchangeAddress : @storage
                                       SENDER;     # @sender : address : @parameter%updateExchangeAddress : @storage
                                       COMPARE;    # int : @parameter%updateExchangeAddress : @storage
                                       EQ;         # bool : @parameter%updateExchangeAddress : @storage
                                       IF
                                         {}
                                         {
                                           PUSH string "FA1.2_Not_Admin"; # string : @parameter%updateExchangeAddress : @storage
                                           FAILWITH;   # FAILED
                                         }; # @parameter%updateExchangeAddress : @storage
                                       # sp.verify(self.data.securityCheck == False, 'FA1.2_Cannot_Update') # @parameter%updateExchangeAddress : @storage
                                       PUSH bool False; # bool : @parameter%updateExchangeAddress : @storage
                                       DUP 3;      # @storage : bool : @parameter%updateExchangeAddress : @storage
                                       GET 3;      # pair (big_map %metadata string bytes) (bool %securityCheck) : bool : @parameter%updateExchangeAddress : @storage
                                       CDR;        # bool : bool : @parameter%updateExchangeAddress : @storage
                                       COMPARE;    # int : @parameter%updateExchangeAddress : @storage
                                       EQ;         # bool : @parameter%updateExchangeAddress : @storage
                                       IF
                                         {}
                                         {
                                           PUSH string "FA1.2_Cannot_Update"; # string : @parameter%updateExchangeAddress : @storage
                                           FAILWITH;   # FAILED
                                         }; # @parameter%updateExchangeAddress : @storage
                                       SWAP;       # @storage : @parameter%updateExchangeAddress
                                       # self.data.exchangeAddress = params # @storage : @parameter%updateExchangeAddress
                                       UNPAIR;     # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%updateExchangeAddress
                                       UNPAIR;     # address : pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%updateExchangeAddress
                                       SWAP;       # pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%updateExchangeAddress
                                       CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%updateExchangeAddress
                                       DIG 3;      # @parameter%updateExchangeAddress : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                       PAIR;       # pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                       SWAP;       # address : pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                       PAIR;       # pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                       SWAP;       # pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       # self.data.securityCheck = True # pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       UNPAIR;     # pair (big_map %metadata string bytes) (bool %securityCheck) : pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       CAR;        # big_map string bytes : pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       PUSH bool True; # bool : big_map string bytes : pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       SWAP;       # big_map string bytes : bool : pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       PAIR;       # pair (big_map string bytes) bool : pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       PAIR;       # pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       SWAP;       # pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                       PAIR;       # pair (pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                     }; # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                 }; # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                               NIL operation; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                             }; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                         }; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                       PAIR;       # pair (list operation) (pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                     };
                 }; # operation : address : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair operation address : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                # sp.operations().push(create_contract_tokenDeployer_128.value.operation) # pair operation address : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # pair operation address : pair operation address : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 2;      # pair operation address : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # operation : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CONS;       # list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # pair operation address : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                # self.data.stableRegistry[params.token1Address][params.token1Id][params.token2Address][params.token2Id] = sp.some(create_contract_tokenDeployer_128.value.address).open_some() # pair operation address : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DIG 3;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair operation address : list operation : @parameter%deployStablePair
                UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SWAP;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                UNPAIR;     # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SWAP;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP 9;      # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                CAR;        # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                IF_NONE
                  {
                    PUSH int 156; # int : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP 11;     # @parameter%deployStablePair : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                GET 4;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                IF_NONE
                  {
                    PUSH int 156; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP;        # @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP 13;     # @parameter%deployStablePair : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                GET 6;      # address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP;        # address : address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUG 2;      # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                GET;        # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                IF_NONE
                  {
                    PUSH int 156; # int : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP 12;     # pair operation address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                CDR;        # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SOME;       # option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                IF_NONE
                  {
                    PUSH int 156; # int : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SOME;       # option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP 15;     # @parameter%deployStablePair : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                GET 3;      # pair (nat %token2Amount) (pair (nat %token2Id) (nat %token2Precision)) : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                GET 3;      # nat : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                UPDATE;     # map nat address : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SOME;       # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SWAP;       # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                # self.data.stableRegistry[params.token2Address][params.token2Id][params.token1Address][params.token1Id] = sp.some(create_contract_tokenDeployer_128.value.address).open_some() # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP 9;      # @parameter%deployStablePair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                GET 6;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                IF_NONE
                  {
                    PUSH int 158; # int : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP 11;     # @parameter%deployStablePair : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                GET 3;      # pair (nat %token2Amount) (pair (nat %token2Id) (nat %token2Precision)) : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                GET 3;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                IF_NONE
                  {
                    PUSH int 158; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP;        # @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP 13;     # @parameter%deployStablePair : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                CAR;        # address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP;        # address : address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUG 2;      # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                GET;        # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                IF_NONE
                  {
                    PUSH int 158; # int : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP 12;     # pair operation address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                CDR;        # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SOME;       # option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                IF_NONE
                  {
                    PUSH int 156; # int : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SOME;       # option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                DUP 15;     # @parameter%deployStablePair : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                GET 4;      # nat : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                UPDATE;     # map nat address : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SOME;       # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SWAP;       # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : pair operation address : list operation : @parameter%deployStablePair
                PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : pair operation address : list operation : @parameter%deployStablePair
                DUG 3;      # pair operation address : list operation : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                # sp.transfer(sp.record(lpTokenAddress = sp.some(create_contract_tokenDeployer_128.value.address).open_some(), token1Address = params.token1Address, token1Amount = params.token1Amount, token1Id = params.token1Id, token1Precision = params.token1Precision, token1Type = params.token1Type, token2Address = params.token2Address, token2Amount = params.token2Amount, token2Id = params.token2Id, token2Precision = params.token2Precision, token2Type = params.token2Type, userAddress = params.userAddress), sp.tez(0), sp.contract(sp.TRecord(lpTokenAddress = sp.TAddress, token1Address = sp.TAddress, token1Amount = sp.TNat, token1Id = sp.TNat, token1Precision = sp.TNat, token1Type = sp.TBool, token2Address = sp.TAddress, token2Amount = sp.TNat, token2Id = sp.TNat, token2Precision = sp.TNat, token2Type = sp.TBool, userAddress = sp.TAddress).layout(((("lpTokenAddress", ("token1Address", "token1Amount")), ("token1Id", ("token1Precision", "token1Type"))), (("token2Address", ("token2Amount", "token2Id")), ("token2Precision", ("token2Type", "userAddress"))))), self.data.stableAmmDeployer, entry_point='deployPair').open_some()) # list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP 4;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # address : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CONTRACT %deployPair (pair (pair (pair (address %lpTokenAddress) (pair (address %token1Address) (nat %token1Amount))) (pair (nat %token1Id) (pair (nat %token1Precision) (bool %token1Type)))) (pair (pair (address %token2Address) (pair (nat %token2Amount) (nat %token2Id))) (pair (nat %token2Precision) (pair (bool %token2Type) (address %userAddress))))); # option (contract (pair (pair (pair (address %lpTokenAddress) (pair (address %token1Address) (nat %token1Amount))) (pair (nat %token1Id) (pair (nat %token1Precision) (bool %token1Type)))) (pair (pair (address %token2Address) (pair (nat %token2Amount) (nat %token2Id))) (pair (nat %token2Precision) (pair (bool %token2Type) (address %userAddress)))))) : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF_NONE
                  {
                    PUSH int 160; # int : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PUSH mutez 0; # mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DIG 4;      # @parameter%deployStablePair : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 8;      # address : @parameter%deployStablePair : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : address : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : address : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 6;      # @parameter%deployStablePair : address : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 5;      # bool : address : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair bool address : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP 6;      # @parameter%deployStablePair : pair bool address : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # pair (nat %token2Amount) (pair (nat %token2Id) (nat %token2Precision)) : pair bool address : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 4;      # nat : pair bool address : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DIG 5;      # @parameter%deployStablePair : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # pair (nat %token2Amount) (pair (nat %token2Id) (nat %token2Precision)) : @parameter%deployStablePair : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # nat : @parameter%deployStablePair : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 7;      # @parameter%deployStablePair : nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # pair (nat %token2Amount) (pair (nat %token2Id) (nat %token2Precision)) : nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # nat : nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair nat nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP 7;      # @parameter%deployStablePair : pair nat nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : pair nat nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 6;      # address : pair nat nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair address (pair nat nat) : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DIG 5;      # @parameter%deployStablePair : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : @parameter%deployStablePair : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 5;      # bool : @parameter%deployStablePair : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : bool : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : bool : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUG 7;      # @parameter%deployStablePair : bool : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : bool : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # nat : bool : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair nat bool : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP 7;      # @parameter%deployStablePair : pair nat bool : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : pair nat bool : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : pair nat bool : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 4;      # nat : pair nat bool : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployStablePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DIG 6;      # @parameter%deployStablePair : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DUP;        # @parameter%deployStablePair : @parameter%deployStablePair : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : @parameter%deployStablePair : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : @parameter%deployStablePair : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                GET 3;      # nat : @parameter%deployStablePair : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SWAP;       # @parameter%deployStablePair : nat : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id))) (pair (nat %token1Precision) (pair (bool %token1Type) (address %token2Address))) : nat : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # pair (address %token1Address) (pair (nat %token1Amount) (nat %token1Id)) : nat : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CAR;        # address : nat : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair address nat : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                DIG 6;      # pair operation address : pair address nat : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CDR;        # address : pair address nat : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                SOME;       # option address : pair address nat : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                IF_NONE
                  {
                    PUSH int 156; # int : pair address nat : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : pair address nat : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair @some (pair address nat) : pair nat (pair nat bool) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair (pair @some (pair address nat)) (pair nat (pair nat bool)) : pair (pair address (pair nat nat)) (pair nat (pair bool address)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                PAIR;       # pair (pair (pair @some (pair address nat)) (pair nat (pair nat bool))) (pair (pair address (pair nat nat)) (pair nat (pair bool address))) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                CONS;       # list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
              }; # list operation : pair (pair (pair address bool) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
          }; # list operation : pair (pair (pair address bool) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%deployVolatilePair
                # == deployVolatilePair ==
                # sp.verify(~ self.data.paused) # @storage : @parameter%deployVolatilePair
                DUP;        # @storage : @storage : @parameter%deployVolatilePair
                DUG 2;      # @storage : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : @parameter%deployVolatilePair : @storage
                CAR;        # pair (address %adminAddress) (bool %paused) : @parameter%deployVolatilePair : @storage
                CDR;        # bool : @parameter%deployVolatilePair : @storage
                IF
                  {
                    PUSH string "WrongCondition: ~ self.data.paused"; # string : @parameter%deployVolatilePair : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%deployVolatilePair : @storage
                SWAP;       # @storage : @parameter%deployVolatilePair
                # if ~ (self.data.volatileRegistry.contains(params.token1Address)): # @storage : @parameter%deployVolatilePair
                DUP;        # @storage : @storage : @parameter%deployVolatilePair
                DUG 2;      # @storage : @parameter%deployVolatilePair : @storage
                GET 8;      # big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @storage
                DUG 2;      # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # pair (address %token1Address) (nat %token1Amount) : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # address : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                MEM;        # bool : @parameter%deployVolatilePair : @storage
                IF
                  {}
                  {
                    SWAP;       # @storage : @parameter%deployVolatilePair
                    # self.data.volatileRegistry[params.token1Address] = {} # @storage : @parameter%deployVolatilePair
                    DUP;        # @storage : @storage : @parameter%deployVolatilePair
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    PUSH (option (map nat (map address (map nat address)))) (Some {}); # option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP 4;      # @parameter%deployVolatilePair : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # pair (address %token1Address) (nat %token1Amount) : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE 8;   # @storage : @parameter%deployVolatilePair
                    SWAP;       # @parameter%deployVolatilePair : @storage
                  }; # @parameter%deployVolatilePair : @storage
                SWAP;       # @storage : @parameter%deployVolatilePair
                # if ~ (self.data.volatileRegistry.contains(params.token2Address)): # @storage : @parameter%deployVolatilePair
                DUP;        # @storage : @storage : @parameter%deployVolatilePair
                DUG 2;      # @storage : @parameter%deployVolatilePair : @storage
                GET 8;      # big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @storage
                DUG 2;      # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                GET 6;      # address : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                MEM;        # bool : @parameter%deployVolatilePair : @storage
                IF
                  {}
                  {
                    SWAP;       # @storage : @parameter%deployVolatilePair
                    # self.data.volatileRegistry[params.token2Address] = {} # @storage : @parameter%deployVolatilePair
                    DUP;        # @storage : @storage : @parameter%deployVolatilePair
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    PUSH (option (map nat (map address (map nat address)))) (Some {}); # option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP 4;      # @parameter%deployVolatilePair : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    GET 6;      # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE 8;   # @storage : @parameter%deployVolatilePair
                    SWAP;       # @parameter%deployVolatilePair : @storage
                  }; # @parameter%deployVolatilePair : @storage
                SWAP;       # @storage : @parameter%deployVolatilePair
                # if ~ (self.data.volatileRegistry[params.token1Address].contains(params.token1Id)): # @storage : @parameter%deployVolatilePair
                DUP;        # @storage : @storage : @parameter%deployVolatilePair
                DUG 2;      # @storage : @parameter%deployVolatilePair : @storage
                GET 8;      # big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @storage
                DUG 2;      # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # pair (address %token1Address) (nat %token1Amount) : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # address : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                GET;        # option (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                IF_NONE
                  {
                    PUSH int 335; # int : @parameter%deployVolatilePair : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : @some : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : @some : @storage
                DUG 2;      # @parameter%deployVolatilePair : @some : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : @some : @parameter%deployVolatilePair : @storage
                GET 3;      # nat : @some : @parameter%deployVolatilePair : @storage
                MEM;        # bool : @parameter%deployVolatilePair : @storage
                IF
                  {}
                  {
                    SWAP;       # @storage : @parameter%deployVolatilePair
                    # self.data.volatileRegistry[params.token1Address][params.token1Id] = {} # @storage : @parameter%deployVolatilePair
                    DUP;        # @storage : @storage : @parameter%deployVolatilePair
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP 4;      # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # pair (address %token1Address) (nat %token1Amount) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    IF_NONE
                      {
                        PUSH int 337; # int : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    PUSH (option (map address (map nat address))) (Some {}); # option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP 6;      # @parameter%deployVolatilePair : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    GET 3;      # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE 8;   # @storage : @parameter%deployVolatilePair
                    SWAP;       # @parameter%deployVolatilePair : @storage
                  }; # @parameter%deployVolatilePair : @storage
                SWAP;       # @storage : @parameter%deployVolatilePair
                # if ~ (self.data.volatileRegistry[params.token2Address].contains(params.token2Id)): # @storage : @parameter%deployVolatilePair
                DUP;        # @storage : @storage : @parameter%deployVolatilePair
                DUG 2;      # @storage : @parameter%deployVolatilePair : @storage
                GET 8;      # big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @storage
                DUG 2;      # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                GET 6;      # address : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                GET;        # option (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                IF_NONE
                  {
                    PUSH int 335; # int : @parameter%deployVolatilePair : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : @some : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : @some : @storage
                DUG 2;      # @parameter%deployVolatilePair : @some : @parameter%deployVolatilePair : @storage
                GET 3;      # pair (nat %token2Amount) (nat %token2Id) : @some : @parameter%deployVolatilePair : @storage
                CDR;        # nat : @some : @parameter%deployVolatilePair : @storage
                MEM;        # bool : @parameter%deployVolatilePair : @storage
                IF
                  {}
                  {
                    SWAP;       # @storage : @parameter%deployVolatilePair
                    # self.data.volatileRegistry[params.token2Address][params.token2Id] = {} # @storage : @parameter%deployVolatilePair
                    DUP;        # @storage : @storage : @parameter%deployVolatilePair
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP 4;      # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    GET 6;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    IF_NONE
                      {
                        PUSH int 337; # int : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    PUSH (option (map address (map nat address))) (Some {}); # option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP 6;      # @parameter%deployVolatilePair : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    GET 3;      # pair (nat %token2Amount) (nat %token2Id) : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CDR;        # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE 8;   # @storage : @parameter%deployVolatilePair
                    SWAP;       # @parameter%deployVolatilePair : @storage
                  }; # @parameter%deployVolatilePair : @storage
                SWAP;       # @storage : @parameter%deployVolatilePair
                # if ~ (self.data.volatileRegistry[params.token1Address][params.token1Id].contains(params.token2Address)): # @storage : @parameter%deployVolatilePair
                DUP;        # @storage : @storage : @parameter%deployVolatilePair
                DUG 2;      # @storage : @parameter%deployVolatilePair : @storage
                GET 8;      # big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @storage
                DUG 2;      # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # pair (address %token1Address) (nat %token1Amount) : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # address : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                GET;        # option (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                IF_NONE
                  {
                    PUSH int 341; # int : @parameter%deployVolatilePair : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : @some : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : @some : @storage
                DUG 2;      # @parameter%deployVolatilePair : @some : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : @some : @parameter%deployVolatilePair : @storage
                GET 3;      # nat : @some : @parameter%deployVolatilePair : @storage
                GET;        # option (map address (map nat address)) : @parameter%deployVolatilePair : @storage
                IF_NONE
                  {
                    PUSH int 341; # int : @parameter%deployVolatilePair : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : @some : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : @some : @storage
                DUG 2;      # @parameter%deployVolatilePair : @some : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : @some : @parameter%deployVolatilePair : @storage
                GET 6;      # address : @some : @parameter%deployVolatilePair : @storage
                MEM;        # bool : @parameter%deployVolatilePair : @storage
                IF
                  {}
                  {
                    SWAP;       # @storage : @parameter%deployVolatilePair
                    # self.data.volatileRegistry[params.token1Address][params.token1Id][params.token2Address] = {} # @storage : @parameter%deployVolatilePair
                    DUP;        # @storage : @storage : @parameter%deployVolatilePair
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP 4;      # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # pair (address %token1Address) (nat %token1Amount) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    IF_NONE
                      {
                        PUSH int 343; # int : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP 6;      # @parameter%deployVolatilePair : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    GET 3;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    IF_NONE
                      {
                        PUSH int 343; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    PUSH (option (map nat address)) (Some {}); # option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP 8;      # @parameter%deployVolatilePair : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    GET 6;      # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE 8;   # @storage : @parameter%deployVolatilePair
                    SWAP;       # @parameter%deployVolatilePair : @storage
                  }; # @parameter%deployVolatilePair : @storage
                SWAP;       # @storage : @parameter%deployVolatilePair
                # if ~ (self.data.volatileRegistry[params.token2Address][params.token2Id].contains(params.token1Address)): # @storage : @parameter%deployVolatilePair
                DUP;        # @storage : @storage : @parameter%deployVolatilePair
                DUG 2;      # @storage : @parameter%deployVolatilePair : @storage
                GET 8;      # big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @storage
                DUG 2;      # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                GET 6;      # address : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                GET;        # option (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                IF_NONE
                  {
                    PUSH int 341; # int : @parameter%deployVolatilePair : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : @some : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : @some : @storage
                DUG 2;      # @parameter%deployVolatilePair : @some : @parameter%deployVolatilePair : @storage
                GET 3;      # pair (nat %token2Amount) (nat %token2Id) : @some : @parameter%deployVolatilePair : @storage
                CDR;        # nat : @some : @parameter%deployVolatilePair : @storage
                GET;        # option (map address (map nat address)) : @parameter%deployVolatilePair : @storage
                IF_NONE
                  {
                    PUSH int 341; # int : @parameter%deployVolatilePair : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : @some : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : @some : @storage
                DUG 2;      # @parameter%deployVolatilePair : @some : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : @some : @parameter%deployVolatilePair : @storage
                CAR;        # pair (address %token1Address) (nat %token1Amount) : @some : @parameter%deployVolatilePair : @storage
                CAR;        # address : @some : @parameter%deployVolatilePair : @storage
                MEM;        # bool : @parameter%deployVolatilePair : @storage
                IF
                  {}
                  {
                    SWAP;       # @storage : @parameter%deployVolatilePair
                    # self.data.volatileRegistry[params.token2Address][params.token2Id][params.token1Address] = {} # @storage : @parameter%deployVolatilePair
                    DUP;        # @storage : @storage : @parameter%deployVolatilePair
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP 4;      # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    GET 6;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    IF_NONE
                      {
                        PUSH int 343; # int : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP 6;      # @parameter%deployVolatilePair : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    GET 3;      # pair (nat %token2Amount) (nat %token2Id) : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CDR;        # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    IF_NONE
                      {
                        PUSH int 343; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    PUSH (option (map nat address)) (Some {}); # option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    DUP 8;      # @parameter%deployVolatilePair : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # pair (address %token1Address) (nat %token1Amount) : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    CAR;        # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%deployVolatilePair
                    UPDATE 8;   # @storage : @parameter%deployVolatilePair
                    SWAP;       # @parameter%deployVolatilePair : @storage
                  }; # @parameter%deployVolatilePair : @storage
                SWAP;       # @storage : @parameter%deployVolatilePair
                # sp.verify(~ (self.data.volatileRegistry[params.token1Address][params.token1Id][params.token2Address].contains(params.token2Id)), 'PairExist') # @storage : @parameter%deployVolatilePair
                DUP;        # @storage : @storage : @parameter%deployVolatilePair
                DUG 2;      # @storage : @parameter%deployVolatilePair : @storage
                GET 8;      # big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @storage
                DUG 2;      # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # pair (address %token1Address) (nat %token1Amount) : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                CAR;        # address : big_map address (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                GET;        # option (map nat (map address (map nat address))) : @parameter%deployVolatilePair : @storage
                IF_NONE
                  {
                    PUSH int 49; # int : @parameter%deployVolatilePair : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : @some : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : @some : @storage
                DUG 2;      # @parameter%deployVolatilePair : @some : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : @some : @parameter%deployVolatilePair : @storage
                GET 3;      # nat : @some : @parameter%deployVolatilePair : @storage
                GET;        # option (map address (map nat address)) : @parameter%deployVolatilePair : @storage
                IF_NONE
                  {
                    PUSH int 49; # int : @parameter%deployVolatilePair : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : @some : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : @some : @storage
                DUG 2;      # @parameter%deployVolatilePair : @some : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : @some : @parameter%deployVolatilePair : @storage
                GET 6;      # address : @some : @parameter%deployVolatilePair : @storage
                GET;        # option (map nat address) : @parameter%deployVolatilePair : @storage
                IF_NONE
                  {
                    PUSH int 49; # int : @parameter%deployVolatilePair : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @parameter%deployVolatilePair : @storage
                SWAP;       # @parameter%deployVolatilePair : @some : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : @some : @storage
                DUG 2;      # @parameter%deployVolatilePair : @some : @parameter%deployVolatilePair : @storage
                GET 3;      # pair (nat %token2Amount) (nat %token2Id) : @some : @parameter%deployVolatilePair : @storage
                CDR;        # nat : @some : @parameter%deployVolatilePair : @storage
                MEM;        # bool : @parameter%deployVolatilePair : @storage
                IF
                  {
                    PUSH string "PairExist"; # string : @parameter%deployVolatilePair : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%deployVolatilePair : @storage
                # create_contract_tokenDeployer_51 = sp.local("create_contract_tokenDeployer_51", create contract ...) # @parameter%deployVolatilePair : @storage
                NIL operation; # list operation : @parameter%deployVolatilePair : @storage
                PUSH nat 0; # nat : list operation : @parameter%deployVolatilePair : @storage
                EMPTY_BIG_MAP nat (pair nat (map string bytes)); # big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                EMPTY_MAP string bytes; # map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                DUP 6;      # @storage : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                GET 3;      # pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol)) : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                CAR;        # bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                SOME;       # option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                PUSH string "decimals"; # string : option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                UPDATE;     # map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                DUP 5;      # @parameter%deployVolatilePair : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                GET 7;      # bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                SOME;       # option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                PUSH string "name"; # string : option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                UPDATE;     # map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                DUP 6;      # @storage : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                GET 3;      # pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol)) : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                GET 4;      # bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                SOME;       # option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                PUSH string "symbol"; # string : option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                UPDATE;     # map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                DUP 6;      # @storage : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                GET 3;      # pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol)) : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                GET 3;      # bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                SOME;       # option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                PUSH string "icon"; # string : option bytes : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                UPDATE;     # map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                PUSH nat 0; # nat : map string bytes : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                PAIR;       # pair nat (map string bytes) : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                SOME;       # option (pair nat (map string bytes)) : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                PUSH nat 0; # nat : option (pair nat (map string bytes)) : big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                UPDATE;     # big_map nat (pair nat (map string bytes)) : nat : list operation : @parameter%deployVolatilePair : @storage
                PAIR;       # pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployVolatilePair : @storage
                PUSH bool False; # bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployVolatilePair : @storage
                EMPTY_BIG_MAP string bytes; # big_map string bytes : bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployVolatilePair : @storage
                DUP 6;      # @storage : big_map string bytes : bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployVolatilePair : @storage
                GET 7;      # bytes : big_map string bytes : bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployVolatilePair : @storage
                SOME;       # option bytes : big_map string bytes : bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployVolatilePair : @storage
                PUSH string ""; # string : option bytes : big_map string bytes : bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployVolatilePair : @storage
                UPDATE;     # big_map string bytes : bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployVolatilePair : @storage
                PAIR;       # pair (big_map string bytes) bool : pair (big_map nat (pair nat (map string bytes))) nat : list operation : @parameter%deployVolatilePair : @storage
                PAIR;       # pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployVolatilePair : @storage
                EMPTY_BIG_MAP address (pair (map address nat) nat); # big_map address (pair (map address nat) nat) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployVolatilePair : @storage
                DUP 5;      # @storage : big_map address (pair (map address nat) nat) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployVolatilePair : @storage
                GET 5;      # address : big_map address (pair (map address nat) nat) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployVolatilePair : @storage
                PAIR;       # pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployVolatilePair : @storage
                DUP 5;      # @storage : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployVolatilePair : @storage
                GET 5;      # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployVolatilePair : @storage
                PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat) : list operation : @parameter%deployVolatilePair : @storage
                PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : @parameter%deployVolatilePair : @storage
                PUSH mutez 0; # mutez : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : @parameter%deployVolatilePair : @storage
                NONE key_hash; # option key_hash : mutez : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map nat (pair nat (map string bytes))) nat)) : list operation : @parameter%deployVolatilePair : @storage
                CREATE_CONTRACT
                 { parameter (or (or (or (pair %RecoverExcessToken (pair (nat %amount) (bool %faTwoCheck)) (pair (address %reciever) (pair (address %tokenAddress) (nat %tokenId)))) (pair %approve (address %spender) (nat %value))) (or (pair %burn (address %address) (nat %value)) (or (pair %getAdministrator unit (contract address)) (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat))))) (or (or (pair %getBalance address (contract nat)) (or (pair %getTotalSupply unit (contract nat)) (pair %mint (address %address) (nat %value)))) (or (address %setAdministrator) (or (pair %transfer (address %from) (pair (address %to) (nat %value))) (address %updateExchangeAddress)))));
                   storage   (pair (pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))));
                   code
                     {
                       UNPAIR;     # @parameter : @storage
                       IF_LEFT
                         {
                           IF_LEFT
                             {
                               IF_LEFT
                                 {
                                   SWAP;       # @storage : @parameter%RecoverExcessToken
                                   # == RecoverExcessToken ==
                                   # sp.verify(sp.sender == self.data.administrator, 'FA1.2_Not_Admin') # @storage : @parameter%RecoverExcessToken
                                   DUP;        # @storage : @storage : @parameter%RecoverExcessToken
                                   DUG 2;      # @storage : @parameter%RecoverExcessToken : @storage
                                   CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%RecoverExcessToken : @storage
                                   CAR;        # address : @parameter%RecoverExcessToken : @storage
                                   SENDER;     # @sender : address : @parameter%RecoverExcessToken : @storage
                                   COMPARE;    # int : @parameter%RecoverExcessToken : @storage
                                   EQ;         # bool : @parameter%RecoverExcessToken : @storage
                                   IF
                                     {}
                                     {
                                       PUSH string "FA1.2_Not_Admin"; # string : @parameter%RecoverExcessToken : @storage
                                       FAILWITH;   # FAILED
                                     }; # @parameter%RecoverExcessToken : @storage
                                   # sp.verify(params.amount > 0, 'Zero_Transfer') # @parameter%RecoverExcessToken : @storage
                                   DUP;        # @parameter%RecoverExcessToken : @parameter%RecoverExcessToken : @storage
                                   CAR;        # pair (nat %amount) (bool %faTwoCheck) : @parameter%RecoverExcessToken : @storage
                                   CAR;        # nat : @parameter%RecoverExcessToken : @storage
                                   PUSH nat 0; # nat : nat : @parameter%RecoverExcessToken : @storage
                                   COMPARE;    # int : @parameter%RecoverExcessToken : @storage
                                   LT;         # bool : @parameter%RecoverExcessToken : @storage
                                   IF
                                     {}
                                     {
                                       PUSH string "Zero_Transfer"; # string : @parameter%RecoverExcessToken : @storage
                                       FAILWITH;   # FAILED
                                     }; # @parameter%RecoverExcessToken : @storage
                                   # if params.faTwoCheck: # @parameter%RecoverExcessToken : @storage
                                   DUP;        # @parameter%RecoverExcessToken : @parameter%RecoverExcessToken : @storage
                                   CAR;        # pair (nat %amount) (bool %faTwoCheck) : @parameter%RecoverExcessToken : @storage
                                   CDR;        # bool : @parameter%RecoverExcessToken : @storage
                                   IF
                                     {
                                       # sp.transfer(sp.list([sp.record(from_ = sp.self_address, txs = sp.list([sp.record(to_ = params.reciever, token_id = params.tokenId, amount = params.amount)]))]), sp.tez(0), sp.contract(sp.TList(sp.TRecord(from_ = sp.TAddress, txs = sp.TList(sp.TRecord(amount = sp.TNat, to_ = sp.TAddress, token_id = sp.TNat).layout(("to_", ("token_id", "amount"))))).layout(("from_", "txs"))), params.tokenAddress, entry_point='transfer').open_some()) # @parameter%RecoverExcessToken : @storage
                                       DUP;        # @parameter%RecoverExcessToken : @parameter%RecoverExcessToken : @storage
                                       GET 5;      # address : @parameter%RecoverExcessToken : @storage
                                       CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))); # option (contract (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))))) : @parameter%RecoverExcessToken : @storage
                                       IF_NONE
                                         {
                                           PUSH int 31; # int : @parameter%RecoverExcessToken : @storage
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : @parameter%RecoverExcessToken : @storage
                                       NIL operation; # list operation : @some : @parameter%RecoverExcessToken : @storage
                                       SWAP;       # @some : list operation : @parameter%RecoverExcessToken : @storage
                                       PUSH mutez 0; # mutez : @some : list operation : @parameter%RecoverExcessToken : @storage
                                       NIL (pair address (list (pair address (pair nat nat)))); # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%RecoverExcessToken : @storage
                                       NIL (pair address (pair nat nat)); # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @parameter%RecoverExcessToken : @storage
                                       DIG 5;      # @parameter%RecoverExcessToken : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       DUP;        # @parameter%RecoverExcessToken : @parameter%RecoverExcessToken : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       CAR;        # pair (nat %amount) (bool %faTwoCheck) : @parameter%RecoverExcessToken : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       CAR;        # nat : @parameter%RecoverExcessToken : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       SWAP;       # @parameter%RecoverExcessToken : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       DUP;        # @parameter%RecoverExcessToken : @parameter%RecoverExcessToken : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       GET 6;      # nat : @parameter%RecoverExcessToken : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       SWAP;       # @parameter%RecoverExcessToken : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       GET 3;      # address : nat : nat : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       PAIR 3;     # pair address (pair nat nat) : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       CONS;       # list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       SELF_ADDRESS; # @self : list (pair address (pair nat nat)) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       PAIR;       # pair @self (list (pair address (pair nat nat))) : list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       CONS;       # list (pair address (list (pair address (pair nat nat)))) : mutez : @some : list operation : @storage
                                       TRANSFER_TOKENS; # operation : list operation : @storage
                                       CONS;       # list operation : @storage
                                     }
                                     {
                                       # sp.transfer(sp.record(from_ = sp.self_address, to_ = params.reciever, value = params.amount), sp.tez(0), sp.contract(sp.TRecord(from_ = sp.TAddress, to_ = sp.TAddress, value = sp.TNat).layout(("from_ as from", ("to_ as to", "value"))), params.tokenAddress, entry_point='transfer').open_some()) # @parameter%RecoverExcessToken : @storage
                                       DUP;        # @parameter%RecoverExcessToken : @parameter%RecoverExcessToken : @storage
                                       GET 5;      # address : @parameter%RecoverExcessToken : @storage
                                       CONTRACT %transfer (pair (address %from) (pair (address %to) (nat %value))); # option (contract (pair (address %from) (pair (address %to) (nat %value)))) : @parameter%RecoverExcessToken : @storage
                                       IF_NONE
                                         {
                                           PUSH int 55; # int : @parameter%RecoverExcessToken : @storage
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : @parameter%RecoverExcessToken : @storage
                                       NIL operation; # list operation : @some : @parameter%RecoverExcessToken : @storage
                                       SWAP;       # @some : list operation : @parameter%RecoverExcessToken : @storage
                                       PUSH mutez 0; # mutez : @some : list operation : @parameter%RecoverExcessToken : @storage
                                       DIG 3;      # @parameter%RecoverExcessToken : mutez : @some : list operation : @storage
                                       DUP;        # @parameter%RecoverExcessToken : @parameter%RecoverExcessToken : mutez : @some : list operation : @storage
                                       CAR;        # pair (nat %amount) (bool %faTwoCheck) : @parameter%RecoverExcessToken : mutez : @some : list operation : @storage
                                       CAR;        # nat : @parameter%RecoverExcessToken : mutez : @some : list operation : @storage
                                       SWAP;       # @parameter%RecoverExcessToken : nat : mutez : @some : list operation : @storage
                                       GET 3;      # address : nat : mutez : @some : list operation : @storage
                                       SELF_ADDRESS; # @self : address : nat : mutez : @some : list operation : @storage
                                       PAIR 3;     # pair @self (pair address nat) : mutez : @some : list operation : @storage
                                       TRANSFER_TOKENS; # operation : list operation : @storage
                                       CONS;       # list operation : @storage
                                     }; # list operation : @storage
                                 }
                                 {
                                   SWAP;       # @storage : @parameter%approve
                                   # == approve ==
                                   # if ~ (self.data.ledger.contains(sp.sender)): # @storage : @parameter%approve
                                   DUP;        # @storage : @storage : @parameter%approve
                                   DUG 2;      # @storage : @parameter%approve : @storage
                                   CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%approve : @storage
                                   GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%approve : @storage
                                   SENDER;     # @sender : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%approve : @storage
                                   MEM;        # bool : @parameter%approve : @storage
                                   IF
                                     {}
                                     {
                                       SWAP;       # @storage : @parameter%approve
                                       # self.data.ledger[sp.sender] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%approve
                                       UNPAIR;     # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       UNPAIR;     # address : pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       SWAP;       # pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       UNPAIR;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       SWAP;       # big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       SENDER;     # @sender : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                                       SWAP;       # @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                     }; # @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   # sp.verify((self.data.ledger[sp.sender].approvals.get(params.spender, default_value = 0) == 0) | (params.value == 0), 'FA1.2_Unsafe_Allowance_Change') # @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   PUSH nat 0; # nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   DUP 3;      # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   CAR;        # pair address (pair address (big_map address (pair (map address nat) nat))) : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   GET 4;      # big_map address (pair (map address nat) nat) : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   SENDER;     # @sender : big_map address (pair (map address nat) nat) : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   GET;        # option (pair (map address nat) nat) : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   IF_NONE
                                     {
                                       PUSH int 126; # int : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   CAR;        # map address nat : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   DUP 3;      # @parameter%approve : map address nat : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   CAR;        # address : map address nat : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   GET;        # option nat : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   IF_NONE
                                     {
                                       PUSH nat 0; # nat : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                     }
                                     {}; # nat : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   COMPARE;    # int : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   EQ;         # bool : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   IF
                                     {
                                       PUSH bool True; # bool : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                     }
                                     {
                                       DUP;        # @parameter%approve : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CDR;        # nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       PUSH nat 0; # nat : nat : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       COMPARE;    # int : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       EQ;         # bool : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                     }; # bool : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   IF
                                     {}
                                     {
                                       PUSH string "FA1.2_Unsafe_Allowance_Change"; # string : @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       FAILWITH;   # FAILED
                                     }; # @parameter%approve : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   SWAP;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                                   # self.data.ledger[sp.sender].approvals[params.spender] = params.value # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%approve
                                   UNPAIR;     # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   UNPAIR;     # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   SWAP;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   UNPAIR;     # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   SWAP;       # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   SENDER;     # @sender : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   DUP;        # @sender : @sender : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   DUG 2;      # @sender : big_map address (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   GET;        # option (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   IF_NONE
                                     {
                                       PUSH int 128; # int : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   DUP;        # @some : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   CAR;        # map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   DUP 8;      # @parameter%approve : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   CDR;        # nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   SOME;       # option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%approve
                                   DIG 8;      # @parameter%approve : option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   CAR;        # address : option nat : map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   UPDATE;     # map address nat : @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   UPDATE 1;   # @some : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   SOME;       # option (pair (map address nat) nat) : @sender : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   SWAP;       # @sender : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   NIL operation; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                 }; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                             }
                             {
                               IF_LEFT
                                 {
                                   SWAP;       # @storage : @parameter%burn
                                   # == burn ==
                                   # sp.verify(sp.sender == self.data.exchangeAddress, 'FA1.2_Not_Exchange') # @storage : @parameter%burn
                                   DUP;        # @storage : @storage : @parameter%burn
                                   DUG 2;      # @storage : @parameter%burn : @storage
                                   CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%burn : @storage
                                   GET 3;      # address : @parameter%burn : @storage
                                   SENDER;     # @sender : address : @parameter%burn : @storage
                                   COMPARE;    # int : @parameter%burn : @storage
                                   EQ;         # bool : @parameter%burn : @storage
                                   IF
                                     {}
                                     {
                                       PUSH string "FA1.2_Not_Exchange"; # string : @parameter%burn : @storage
                                       FAILWITH;   # FAILED
                                     }; # @parameter%burn : @storage
                                   # sp.verify(self.data.ledger[params.address].balance >= params.value, 'FA1.2_Insufficient_Balance') # @parameter%burn : @storage
                                   DUP;        # @parameter%burn : @parameter%burn : @storage
                                   CDR;        # nat : @parameter%burn : @storage
                                   DUP 3;      # @storage : nat : @parameter%burn : @storage
                                   CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : nat : @parameter%burn : @storage
                                   GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                                   DUP 3;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                                   CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                                   GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%burn : @storage
                                   IF_NONE
                                     {
                                       PUSH int 171; # int : nat : @parameter%burn : @storage
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : nat : @parameter%burn : @storage
                                   CDR;        # nat : nat : @parameter%burn : @storage
                                   COMPARE;    # int : @parameter%burn : @storage
                                   GE;         # bool : @parameter%burn : @storage
                                   IF
                                     {}
                                     {
                                       PUSH string "FA1.2_Insufficient_Balance"; # string : @parameter%burn : @storage
                                       FAILWITH;   # FAILED
                                     }; # @parameter%burn : @storage
                                   SWAP;       # @storage : @parameter%burn
                                   # self.data.ledger[params.address].balance = sp.as_nat(self.data.ledger[params.address].balance - params.value) # @storage : @parameter%burn
                                   DUP;        # @storage : @storage : @parameter%burn
                                   DUG 2;      # @storage : @parameter%burn : @storage
                                   UNPAIR;     # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   UNPAIR;     # address : pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   SWAP;       # pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   UNPAIR;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   SWAP;       # big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   DUP;        # big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   DUP 6;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   DUP;        # address : address : big_map address (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   DUG 2;      # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   GET;        # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   IF_NONE
                                     {
                                       PUSH int 173; # int : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   DUP 7;      # @parameter%burn : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   CDR;        # nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn : @storage
                                   DIG 8;      # @storage : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   DUP 9;      # @parameter%burn : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   IF_NONE
                                     {
                                       PUSH int 173; # int : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   CDR;        # nat : nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   SUB;        # int : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   ISNAT;      # option nat : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   IF_NONE
                                     {
                                       PUSH int 173; # int : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   UPDATE 2;   # @some : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   SOME;       # option (pair (map %approvals address nat) (nat %balance)) : address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   SWAP;       # address : option (pair (map %approvals address nat) (nat %balance)) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   UPDATE;     # big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   SWAP;       # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   PAIR;       # pair address (big_map address (pair (map %approvals address nat) (nat %balance))) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   SWAP;       # address : pair address (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   PAIR;       # pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%burn
                                   PAIR;       # pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%burn
                                   # self.data.totalSupply = sp.as_nat(self.data.totalSupply - params.value) # pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%burn
                                   DUP;        # pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%burn
                                   DUG 2;      # pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%burn : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   SWAP;       # @parameter%burn : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   CDR;        # nat : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   DIG 2;      # pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   GET 6;      # nat : nat : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   SUB;        # int : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   ISNAT;      # option nat : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   IF_NONE
                                     {
                                       PUSH int 174; # int : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       FAILWITH;   # FAILED
                                     }
                                     {}; # @some : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   UPDATE 6;   # pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                   NIL operation; # list operation : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                 }
                                 {
                                   IF_LEFT
                                     {
                                       SWAP;       # @storage : @parameter%getAdministrator
                                       # == getAdministrator ==
                                       # sp.result(self.data.administrator) # @storage : @parameter%getAdministrator
                                       DUP;        # @storage : @storage : @parameter%getAdministrator
                                       DUG 2;      # @storage : @parameter%getAdministrator : @storage
                                       CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%getAdministrator : @storage
                                       CAR;        # address : @parameter%getAdministrator : @storage
                                       # sp.transfer(__s5.value, sp.tez(0), sp.snd(params)) # address : @parameter%getAdministrator : @storage
                                       NIL operation; # list operation : address : @parameter%getAdministrator : @storage
                                       DIG 2;      # @parameter%getAdministrator : list operation : address : @storage
                                       CDR;        # contract address : list operation : address : @storage
                                       PUSH mutez 0; # mutez : contract address : list operation : address : @storage
                                       DIG 3;      # address : mutez : contract address : list operation : @storage
                                       TRANSFER_TOKENS; # operation : list operation : @storage
                                       CONS;       # list operation : @storage
                                     }
                                     {
                                       SWAP;       # @storage : @parameter%getAllowance
                                       # == getAllowance ==
                                       # if self.data.ledger.contains(sp.fst(params).owner): # @storage : @parameter%getAllowance
                                       DUP;        # @storage : @storage : @parameter%getAllowance
                                       DUG 2;      # @storage : @parameter%getAllowance : @storage
                                       CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%getAllowance : @storage
                                       GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                       SWAP;       # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUP;        # @parameter%getAllowance : @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUG 2;      # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                       CAR;        # pair (address %owner) (address %spender) : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                       CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                       MEM;        # bool : @parameter%getAllowance : @storage
                                       IF
                                         {
                                           SWAP;       # @storage : @parameter%getAllowance
                                           # sp.result(self.data.ledger[sp.fst(params).owner].approvals.get(sp.fst(params).spender, default_value = 0)) # @storage : @parameter%getAllowance
                                           DUP;        # @storage : @storage : @parameter%getAllowance
                                           DUG 2;      # @storage : @parameter%getAllowance : @storage
                                           CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%getAllowance : @storage
                                           GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                           SWAP;       # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                           DUP;        # @parameter%getAllowance : @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                           DUG 2;      # @parameter%getAllowance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                           CAR;        # pair (address %owner) (address %spender) : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                           CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                           GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%getAllowance : @storage
                                           IF_NONE
                                             {
                                               PUSH int 144; # int : @parameter%getAllowance : @storage
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : @parameter%getAllowance : @storage
                                           CAR;        # map address nat : @parameter%getAllowance : @storage
                                           SWAP;       # @parameter%getAllowance : map address nat : @storage
                                           DUP;        # @parameter%getAllowance : @parameter%getAllowance : map address nat : @storage
                                           DUG 2;      # @parameter%getAllowance : map address nat : @parameter%getAllowance : @storage
                                           CAR;        # pair (address %owner) (address %spender) : map address nat : @parameter%getAllowance : @storage
                                           CDR;        # address : map address nat : @parameter%getAllowance : @storage
                                           GET;        # option nat : @parameter%getAllowance : @storage
                                           IF_NONE
                                             {
                                               PUSH nat 0; # nat : @parameter%getAllowance : @storage
                                             }
                                             {}; # nat : @parameter%getAllowance : @storage
                                         }
                                         {
                                           # sp.result(0) # @parameter%getAllowance : @storage
                                           PUSH nat 0; # nat : @parameter%getAllowance : @storage
                                         }; # nat : @parameter%getAllowance : @storage
                                       # sp.transfer(__s6.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getAllowance : @storage
                                       NIL operation; # list operation : nat : @parameter%getAllowance : @storage
                                       DIG 2;      # @parameter%getAllowance : list operation : nat : @storage
                                       CDR;        # contract nat : list operation : nat : @storage
                                       PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                                       DIG 3;      # nat : mutez : contract nat : list operation : @storage
                                       TRANSFER_TOKENS; # operation : list operation : @storage
                                       CONS;       # list operation : @storage
                                     }; # list operation : @storage
                                 }; # list operation : pair (pair address (pair address (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                             }; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                         }
                         {
                           IF_LEFT
                             {
                               IF_LEFT
                                 {
                                   SWAP;       # @storage : @parameter%getBalance
                                   # == getBalance ==
                                   # if self.data.ledger.contains(sp.fst(params)): # @storage : @parameter%getBalance
                                   DUP;        # @storage : @storage : @parameter%getBalance
                                   DUG 2;      # @storage : @parameter%getBalance : @storage
                                   CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%getBalance : @storage
                                   GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                                   SWAP;       # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                   DUP;        # @parameter%getBalance : @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                   DUG 2;      # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                                   CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                                   MEM;        # bool : @parameter%getBalance : @storage
                                   IF
                                     {
                                       SWAP;       # @storage : @parameter%getBalance
                                       # sp.result(self.data.ledger[sp.fst(params)].balance) # @storage : @parameter%getBalance
                                       DUP;        # @storage : @storage : @parameter%getBalance
                                       DUG 2;      # @storage : @parameter%getBalance : @storage
                                       CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%getBalance : @storage
                                       GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                                       SWAP;       # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUP;        # @parameter%getBalance : @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUG 2;      # @parameter%getBalance : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                                       CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                                       GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%getBalance : @storage
                                       IF_NONE
                                         {
                                           PUSH int 137; # int : @parameter%getBalance : @storage
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : @parameter%getBalance : @storage
                                       CDR;        # nat : @parameter%getBalance : @storage
                                     }
                                     {
                                       # sp.result(0) # @parameter%getBalance : @storage
                                       PUSH nat 0; # nat : @parameter%getBalance : @storage
                                     }; # nat : @parameter%getBalance : @storage
                                   # sp.transfer(__s7.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getBalance : @storage
                                   NIL operation; # list operation : nat : @parameter%getBalance : @storage
                                   DIG 2;      # @parameter%getBalance : list operation : nat : @storage
                                   CDR;        # contract nat : list operation : nat : @storage
                                   PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                                   DIG 3;      # nat : mutez : contract nat : list operation : @storage
                                   TRANSFER_TOKENS; # operation : list operation : @storage
                                   CONS;       # list operation : @storage
                                 }
                                 {
                                   IF_LEFT
                                     {
                                       SWAP;       # @storage : @parameter%getTotalSupply
                                       # == getTotalSupply ==
                                       # sp.result(self.data.totalSupply) # @storage : @parameter%getTotalSupply
                                       DUP;        # @storage : @storage : @parameter%getTotalSupply
                                       DUG 2;      # @storage : @parameter%getTotalSupply : @storage
                                       GET 6;      # nat : @parameter%getTotalSupply : @storage
                                       # sp.transfer(__s8.value, sp.tez(0), sp.snd(params)) # nat : @parameter%getTotalSupply : @storage
                                       NIL operation; # list operation : nat : @parameter%getTotalSupply : @storage
                                       DIG 2;      # @parameter%getTotalSupply : list operation : nat : @storage
                                       CDR;        # contract nat : list operation : nat : @storage
                                       PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                                       DIG 3;      # nat : mutez : contract nat : list operation : @storage
                                       TRANSFER_TOKENS; # operation : list operation : @storage
                                       CONS;       # list operation : @storage
                                     }
                                     {
                                       SWAP;       # @storage : @parameter%mint
                                       # == mint ==
                                       # sp.verify(sp.sender == self.data.exchangeAddress, 'FA1.2_Not_Exchange') # @storage : @parameter%mint
                                       DUP;        # @storage : @storage : @parameter%mint
                                       DUG 2;      # @storage : @parameter%mint : @storage
                                       CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%mint : @storage
                                       GET 3;      # address : @parameter%mint : @storage
                                       SENDER;     # @sender : address : @parameter%mint : @storage
                                       COMPARE;    # int : @parameter%mint : @storage
                                       EQ;         # bool : @parameter%mint : @storage
                                       IF
                                         {}
                                         {
                                           PUSH string "FA1.2_Not_Exchange"; # string : @parameter%mint : @storage
                                           FAILWITH;   # FAILED
                                         }; # @parameter%mint : @storage
                                       SWAP;       # @storage : @parameter%mint
                                       # if ~ (self.data.ledger.contains(params.address)): # @storage : @parameter%mint
                                       DUP;        # @storage : @storage : @parameter%mint
                                       DUG 2;      # @storage : @parameter%mint : @storage
                                       CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%mint : @storage
                                       GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                                       SWAP;       # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUP;        # @parameter%mint : @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUG 2;      # @parameter%mint : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                                       CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%mint : @storage
                                       MEM;        # bool : @parameter%mint : @storage
                                       IF
                                         {}
                                         {
                                           SWAP;       # @storage : @parameter%mint
                                           # self.data.ledger[params.address] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%mint
                                           UNPAIR;     # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           UNPAIR;     # address : pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           SWAP;       # pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           UNPAIR;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           SWAP;       # big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           DUP 6;      # @parameter%mint : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                                           SWAP;       # @parameter%mint : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                         }; # @parameter%mint : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SWAP;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                                       # self.data.ledger[params.address].balance += params.value # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                                       UNPAIR;     # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       UNPAIR;     # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       SWAP;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       UNPAIR;     # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       SWAP;       # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       DUP 6;      # @parameter%mint : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       IF_NONE
                                         {
                                           PUSH int 162; # int : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       DUP 8;      # @parameter%mint : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%mint
                                       PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                                       # self.data.totalSupply += params.value # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                                       DUP;        # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                                       GET 6;      # nat : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%mint
                                       DIG 2;      # @parameter%mint : nat : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CDR;        # nat : nat : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       ADD;        # nat : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       UPDATE 6;   # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       NIL operation; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                     }; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                 }; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                             }
                             {
                               IF_LEFT
                                 {
                                   SWAP;       # @storage : @parameter%setAdministrator
                                   # == setAdministrator ==
                                   # sp.verify(sp.sender == self.data.administrator, 'FA1.2_Not_Admin') # @storage : @parameter%setAdministrator
                                   DUP;        # @storage : @storage : @parameter%setAdministrator
                                   DUG 2;      # @storage : @parameter%setAdministrator : @storage
                                   CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%setAdministrator : @storage
                                   CAR;        # address : @parameter%setAdministrator : @storage
                                   SENDER;     # @sender : address : @parameter%setAdministrator : @storage
                                   COMPARE;    # int : @parameter%setAdministrator : @storage
                                   EQ;         # bool : @parameter%setAdministrator : @storage
                                   IF
                                     {}
                                     {
                                       PUSH string "FA1.2_Not_Admin"; # string : @parameter%setAdministrator : @storage
                                       FAILWITH;   # FAILED
                                     }; # @parameter%setAdministrator : @storage
                                   SWAP;       # @storage : @parameter%setAdministrator
                                   # self.data.administrator = params # @storage : @parameter%setAdministrator
                                   UNPAIR;     # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%setAdministrator
                                   CDR;        # pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%setAdministrator
                                   DIG 2;      # @parameter%setAdministrator : pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   PAIR;       # pair @parameter%setAdministrator (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                   PAIR;       # pair (pair @parameter%setAdministrator (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                 }
                                 {
                                   IF_LEFT
                                     {
                                       # == transfer ==
                                       # sp.verify((params.from_ == sp.sender) | (self.data.ledger[params.from_].approvals[sp.sender] >= params.value), 'FA1.2_Not_Allowed') # @parameter%transfer : @storage
                                       DUP;        # @parameter%transfer : @parameter%transfer : @storage
                                       CAR;        # address : @parameter%transfer : @storage
                                       SENDER;     # @sender : address : @parameter%transfer : @storage
                                       COMPARE;    # int : @parameter%transfer : @storage
                                       EQ;         # bool : @parameter%transfer : @storage
                                       IF
                                         {
                                           PUSH bool True; # bool : @parameter%transfer : @storage
                                         }
                                         {
                                           DUP;        # @parameter%transfer : @parameter%transfer : @storage
                                           GET 4;      # nat : @parameter%transfer : @storage
                                           DUP 3;      # @storage : nat : @parameter%transfer : @storage
                                           CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : nat : @parameter%transfer : @storage
                                           GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                                           DUP 3;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                                           CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                                           GET;        # option (pair (map %approvals address nat) (nat %balance)) : nat : @parameter%transfer : @storage
                                           IF_NONE
                                             {
                                               PUSH int 107; # int : nat : @parameter%transfer : @storage
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : nat : @parameter%transfer : @storage
                                           CAR;        # map address nat : nat : @parameter%transfer : @storage
                                           SENDER;     # @sender : map address nat : nat : @parameter%transfer : @storage
                                           GET;        # option nat : nat : @parameter%transfer : @storage
                                           IF_NONE
                                             {
                                               PUSH int 107; # int : nat : @parameter%transfer : @storage
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : nat : @parameter%transfer : @storage
                                           COMPARE;    # int : @parameter%transfer : @storage
                                           GE;         # bool : @parameter%transfer : @storage
                                         }; # bool : @parameter%transfer : @storage
                                       IF
                                         {}
                                         {
                                           PUSH string "FA1.2_Not_Allowed"; # string : @parameter%transfer : @storage
                                           FAILWITH;   # FAILED
                                         }; # @parameter%transfer : @storage
                                       SWAP;       # @storage : @parameter%transfer
                                       # if ~ (self.data.ledger.contains(params.from_)): # @storage : @parameter%transfer
                                       DUP;        # @storage : @storage : @parameter%transfer
                                       DUG 2;      # @storage : @parameter%transfer : @storage
                                       CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%transfer : @storage
                                       GET 4;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                                       SWAP;       # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @storage
                                       DUG 2;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                                       CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage
                                       MEM;        # bool : @parameter%transfer : @storage
                                       IF
                                         {}
                                         {
                                           SWAP;       # @storage : @parameter%transfer
                                           # self.data.ledger[params.from_] = sp.record(approvals = {}, balance = 0) # @storage : @parameter%transfer
                                           UNPAIR;     # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           UNPAIR;     # address : pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           UNPAIR;     # address : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           DUP 6;      # @parameter%transfer : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map %approvals address nat) (nat %balance)) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                           SWAP;       # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                         }; # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SWAP;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                       # if ~ (self.data.ledger.contains(params.to_)): # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                       DUP;        # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                       DUG 2;      # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CAR;        # pair address (pair address (big_map address (pair (map address nat) nat))) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET 4;      # big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SWAP;       # @parameter%transfer : big_map address (pair (map address nat) nat) : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # @parameter%transfer : @parameter%transfer : big_map address (pair (map address nat) nat) : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUG 2;      # @parameter%transfer : big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET 3;      # address : big_map address (pair (map address nat) nat) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       MEM;        # bool : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       IF
                                         {}
                                         {
                                           SWAP;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                           # self.data.ledger[params.to_] = sp.record(approvals = {}, balance = 0) # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                           UNPAIR;     # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           UNPAIR;     # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           UNPAIR;     # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PUSH (option (pair (map address nat) nat)) (Some (Pair {} 0)); # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           DUP 6;      # @parameter%transfer : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           GET 3;      # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                           SWAP;       # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                         }; # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       # sp.verify(params.value > 0, 'FA1.2_Zero_Transfer') # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # @parameter%transfer : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET 4;      # nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       PUSH nat 0; # nat : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       COMPARE;    # int : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       LT;         # bool : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       IF
                                         {}
                                         {
                                           PUSH string "FA1.2_Zero_Transfer"; # string : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           FAILWITH;   # FAILED
                                         }; # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       # sp.verify(params.from_ != params.to_, 'FA1.2_Same_Address_Transfer') # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # @parameter%transfer : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET 3;      # address : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SWAP;       # @parameter%transfer : address : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # @parameter%transfer : @parameter%transfer : address : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUG 2;      # @parameter%transfer : address : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CAR;        # address : address : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       COMPARE;    # int : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       NEQ;        # bool : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       IF
                                         {}
                                         {
                                           PUSH string "FA1.2_Same_Address_Transfer"; # string : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           FAILWITH;   # FAILED
                                         }; # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       # sp.verify(self.data.ledger[params.from_].balance >= params.value, 'FA1.2_Insufficient_Balance') # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # @parameter%transfer : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET 4;      # nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP 3;      # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CAR;        # pair address (pair address (big_map address (pair (map address nat) nat))) : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET 4;      # big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP 3;      # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CAR;        # address : big_map address (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET;        # option (pair (map address nat) nat) : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       IF_NONE
                                         {
                                           PUSH int 115; # int : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CDR;        # nat : nat : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       COMPARE;    # int : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GE;         # bool : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       IF
                                         {}
                                         {
                                           PUSH string "FA1.2_Insufficient_Balance"; # string : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           FAILWITH;   # FAILED
                                         }; # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SWAP;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                       # self.data.ledger[params.from_].balance = sp.as_nat(self.data.ledger[params.from_].balance - params.value) # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                       DUP;        # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                       DUG 2;      # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       UNPAIR;     # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       UNPAIR;     # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SWAP;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       UNPAIR;     # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SWAP;       # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       IF_NONE
                                         {
                                           PUSH int 116; # int : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP 7;      # @parameter%transfer : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       GET 4;      # nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DIG 8;      # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       CAR;        # pair address (pair address (big_map address (pair (map address nat) nat))) : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       GET 4;      # big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       DUP 9;      # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       CAR;        # address : big_map address (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       GET;        # option (pair (map address nat) nat) : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       IF_NONE
                                         {
                                           PUSH int 116; # int : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       CDR;        # nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       SUB;        # int : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       ISNAT;      # option nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       IF_NONE
                                         {
                                           PUSH int 116; # int : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       # self.data.ledger[params.to_].balance += params.value # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       DUP 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       GET 3;      # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       IF_NONE
                                         {
                                           PUSH int 117; # int : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           FAILWITH;   # FAILED
                                         }
                                         {}; # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       CDR;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       DUP 8;      # @parameter%transfer : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       GET 4;      # nat : nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       ADD;        # nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       UPDATE 2;   # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                       PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                       SWAP;       # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       # if params.from_ != sp.sender: # @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       DUP;        # @parameter%transfer : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       CAR;        # address : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       SENDER;     # @sender : address : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       COMPARE;    # int : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       NEQ;        # bool : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                       IF
                                         {
                                           SWAP;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                           # self.data.ledger[params.from_].approvals[sp.sender] = sp.as_nat(self.data.ledger[params.from_].approvals[sp.sender] - params.value) # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                           DUP;        # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer
                                           DUG 2;      # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           UNPAIR;     # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           UNPAIR;     # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           SWAP;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           UNPAIR;     # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           SWAP;       # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           DUP;        # big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           DUP 6;      # @parameter%transfer : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           CAR;        # address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           DUP;        # address : address : big_map address (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           DUG 2;      # address : big_map address (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           GET;        # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           IF_NONE
                                             {
                                               PUSH int 119; # int : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           DUP;        # @some : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           CAR;        # map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           DUP 8;      # @parameter%transfer : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           GET 4;      # nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                           DIG 9;      # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           CAR;        # pair address (pair address (big_map address (pair (map address nat) nat))) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           GET 4;      # big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%transfer
                                           DIG 9;      # @parameter%transfer : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           CAR;        # address : big_map address (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           GET;        # option (pair (map address nat) nat) : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           IF_NONE
                                             {
                                               PUSH int 119; # int : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           CAR;        # map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SENDER;     # @sender : map address nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           GET;        # option nat : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           IF_NONE
                                             {
                                               PUSH int 119; # int : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SUB;        # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           ISNAT;      # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           IF_NONE
                                             {
                                               PUSH int 119; # int : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                               FAILWITH;   # FAILED
                                             }
                                             {}; # @some : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SOME;       # option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SENDER;     # @sender : option nat : map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           UPDATE;     # map address nat : @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           UPDATE 1;   # @some : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SOME;       # option (pair (map address nat) nat) : address : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SWAP;       # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           UPDATE;     # big_map address (pair (map address nat) nat) : address : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SWAP;       # address : big_map address (pair (map address nat) nat) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           PAIR;       # pair address (big_map address (pair (map address nat) nat)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           SWAP;       # address : pair address (big_map address (pair (map address nat) nat)) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           PAIR;       # pair address (pair address (big_map address (pair (map address nat) nat))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                           PAIR;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                         }
                                         {
                                           DROP;       # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                         }; # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                     }
                                     {
                                       SWAP;       # @storage : @parameter%updateExchangeAddress
                                       # == updateExchangeAddress ==
                                       # sp.verify(sp.sender == self.data.administrator, 'FA1.2_Not_Admin') # @storage : @parameter%updateExchangeAddress
                                       DUP;        # @storage : @storage : @parameter%updateExchangeAddress
                                       DUG 2;      # @storage : @parameter%updateExchangeAddress : @storage
                                       CAR;        # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : @parameter%updateExchangeAddress : @storage
                                       CAR;        # address : @parameter%updateExchangeAddress : @storage
                                       SENDER;     # @sender : address : @parameter%updateExchangeAddress : @storage
                                       COMPARE;    # int : @parameter%updateExchangeAddress : @storage
                                       EQ;         # bool : @parameter%updateExchangeAddress : @storage
                                       IF
                                         {}
                                         {
                                           PUSH string "FA1.2_Not_Admin"; # string : @parameter%updateExchangeAddress : @storage
                                           FAILWITH;   # FAILED
                                         }; # @parameter%updateExchangeAddress : @storage
                                       # sp.verify(self.data.securityCheck == False, 'FA1.2_Cannot_Update') # @parameter%updateExchangeAddress : @storage
                                       PUSH bool False; # bool : @parameter%updateExchangeAddress : @storage
                                       DUP 3;      # @storage : bool : @parameter%updateExchangeAddress : @storage
                                       GET 3;      # pair (big_map %metadata string bytes) (bool %securityCheck) : bool : @parameter%updateExchangeAddress : @storage
                                       CDR;        # bool : bool : @parameter%updateExchangeAddress : @storage
                                       COMPARE;    # int : @parameter%updateExchangeAddress : @storage
                                       EQ;         # bool : @parameter%updateExchangeAddress : @storage
                                       IF
                                         {}
                                         {
                                           PUSH string "FA1.2_Cannot_Update"; # string : @parameter%updateExchangeAddress : @storage
                                           FAILWITH;   # FAILED
                                         }; # @parameter%updateExchangeAddress : @storage
                                       SWAP;       # @storage : @parameter%updateExchangeAddress
                                       # self.data.exchangeAddress = params # @storage : @parameter%updateExchangeAddress
                                       UNPAIR;     # pair (address %administrator) (pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%updateExchangeAddress
                                       UNPAIR;     # address : pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%updateExchangeAddress
                                       SWAP;       # pair (address %exchangeAddress) (big_map %ledger address (pair (map %approvals address nat) (nat %balance))) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%updateExchangeAddress
                                       CDR;        # big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : @parameter%updateExchangeAddress
                                       DIG 3;      # @parameter%updateExchangeAddress : big_map address (pair (map %approvals address nat) (nat %balance)) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                       PAIR;       # pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))) : address : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                       SWAP;       # address : pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                       PAIR;       # pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                       SWAP;       # pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       # self.data.securityCheck = True # pair (pair (big_map %metadata string bytes) (bool %securityCheck)) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       UNPAIR;     # pair (big_map %metadata string bytes) (bool %securityCheck) : pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       CAR;        # big_map string bytes : pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       PUSH bool True; # bool : big_map string bytes : pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       SWAP;       # big_map string bytes : bool : pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       PAIR;       # pair (big_map string bytes) bool : pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       PAIR;       # pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)) : pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))
                                       SWAP;       # pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance)))) : pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))
                                       PAIR;       # pair (pair address (pair @parameter%updateExchangeAddress (big_map address (pair (map %approvals address nat) (nat %balance))))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                     }; # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                                 }; # pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                               NIL operation; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                             }; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                         }; # list operation : pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply)))
                       PAIR;       # pair (list operation) (pair (pair address (pair address (big_map address (pair (map address nat) nat)))) (pair (pair (big_map string bytes) bool) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %totalSupply))))
                     };
                 }; # operation : address : list operation : @parameter%deployVolatilePair : @storage
                PAIR;       # pair operation address : list operation : @parameter%deployVolatilePair : @storage
                # sp.operations().push(create_contract_tokenDeployer_51.value.operation) # pair operation address : list operation : @parameter%deployVolatilePair : @storage
                DUP;        # pair operation address : pair operation address : list operation : @parameter%deployVolatilePair : @storage
                DUG 2;      # pair operation address : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                CAR;        # operation : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                CONS;       # list operation : pair operation address : @parameter%deployVolatilePair : @storage
                SWAP;       # pair operation address : list operation : @parameter%deployVolatilePair : @storage
                # self.data.volatileRegistry[params.token1Address][params.token1Id][params.token2Address][params.token2Id] = sp.some(create_contract_tokenDeployer_51.value.address).open_some() # pair operation address : list operation : @parameter%deployVolatilePair : @storage
                DIG 3;      # @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP;        # @storage : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP 6;      # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                CAR;        # pair (address %token1Address) (nat %token1Amount) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                CAR;        # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                IF_NONE
                  {
                    PUSH int 79; # int : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP 8;      # @parameter%deployVolatilePair : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                GET 3;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                IF_NONE
                  {
                    PUSH int 79; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP;        # @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP 10;     # @parameter%deployVolatilePair : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                GET 6;      # address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP;        # address : address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUG 2;      # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                GET;        # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                IF_NONE
                  {
                    PUSH int 79; # int : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP 9;      # pair operation address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                CDR;        # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SOME;       # option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                IF_NONE
                  {
                    PUSH int 79; # int : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SOME;       # option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP 12;     # @parameter%deployVolatilePair : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                GET 3;      # pair (nat %token2Amount) (nat %token2Id) : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                CDR;        # nat : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                UPDATE;     # map nat address : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SOME;       # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SWAP;       # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                UPDATE 8;   # @storage : pair operation address : list operation : @parameter%deployVolatilePair
                # self.data.volatileRegistry[params.token2Address][params.token2Id][params.token1Address][params.token1Id] = sp.some(create_contract_tokenDeployer_51.value.address).open_some() # @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP;        # @storage : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP 6;      # @parameter%deployVolatilePair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                GET 6;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                IF_NONE
                  {
                    PUSH int 81; # int : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP 8;      # @parameter%deployVolatilePair : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                GET 3;      # pair (nat %token2Amount) (nat %token2Id) : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                CDR;        # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                IF_NONE
                  {
                    PUSH int 81; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP;        # @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP 10;     # @parameter%deployVolatilePair : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                CAR;        # pair (address %token1Address) (nat %token1Amount) : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                CAR;        # address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP;        # address : address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUG 2;      # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                GET;        # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                IF_NONE
                  {
                    PUSH int 81; # int : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP 9;      # pair operation address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                CDR;        # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SOME;       # option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                IF_NONE
                  {
                    PUSH int 79; # int : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SOME;       # option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUP 12;     # @parameter%deployVolatilePair : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                GET 3;      # nat : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                UPDATE;     # map nat address : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SOME;       # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SWAP;       # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : pair operation address : list operation : @parameter%deployVolatilePair
                UPDATE 8;   # @storage : pair operation address : list operation : @parameter%deployVolatilePair
                DUG 3;      # pair operation address : list operation : @parameter%deployVolatilePair : @storage
                SWAP;       # list operation : pair operation address : @parameter%deployVolatilePair : @storage
                # sp.transfer(sp.record(lpTokenAddress = sp.some(create_contract_tokenDeployer_51.value.address).open_some(), token1Address = params.token1Address, token1Amount = params.token1Amount, token1Id = params.token1Id, token1Type = params.token1Type, token2Address = params.token2Address, token2Amount = params.token2Amount, token2Id = params.token2Id, token2Type = params.token2Type, userAddress = params.userAddress), sp.tez(0), sp.contract(sp.TRecord(lpTokenAddress = sp.TAddress, token1Address = sp.TAddress, token1Amount = sp.TNat, token1Id = sp.TNat, token1Type = sp.TBool, token2Address = sp.TAddress, token2Amount = sp.TNat, token2Id = sp.TNat, token2Type = sp.TBool, userAddress = sp.TAddress).layout(((("lpTokenAddress", "token1Address"), ("token1Amount", ("token1Id", "token1Type"))), (("token2Address", "token2Amount"), ("token2Id", ("token2Type", "userAddress"))))), self.data.volatileAmmDeployer, entry_point='deployPair').open_some()) # list operation : pair operation address : @parameter%deployVolatilePair : @storage
                DUP 4;      # @storage : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                GET 5;      # address : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                CONTRACT %deployPair (pair (pair (pair (address %lpTokenAddress) (address %token1Address)) (pair (nat %token1Amount) (pair (nat %token1Id) (bool %token1Type)))) (pair (pair (address %token2Address) (nat %token2Amount)) (pair (nat %token2Id) (pair (bool %token2Type) (address %userAddress))))); # option (contract (pair (pair (pair (address %lpTokenAddress) (address %token1Address)) (pair (nat %token1Amount) (pair (nat %token1Id) (bool %token1Type)))) (pair (pair (address %token2Address) (nat %token2Amount)) (pair (nat %token2Id) (pair (bool %token2Type) (address %userAddress)))))) : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                IF_NONE
                  {
                    PUSH int 84; # int : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                PUSH mutez 0; # mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                DIG 4;      # @parameter%deployVolatilePair : mutez : @some : list operation : pair operation address : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : mutez : @some : list operation : pair operation address : @storage
                GET 8;      # address : @parameter%deployVolatilePair : mutez : @some : list operation : pair operation address : @storage
                SWAP;       # @parameter%deployVolatilePair : address : mutez : @some : list operation : pair operation address : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : address : mutez : @some : list operation : pair operation address : @storage
                DUG 6;      # @parameter%deployVolatilePair : address : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                GET 5;      # bool : address : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                PAIR;       # pair bool address : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                DUP 6;      # @parameter%deployVolatilePair : pair bool address : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                GET 3;      # pair (nat %token2Amount) (nat %token2Id) : pair bool address : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                CDR;        # nat : pair bool address : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                PAIR;       # pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                DIG 5;      # @parameter%deployVolatilePair : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @storage
                GET 3;      # pair (nat %token2Amount) (nat %token2Id) : @parameter%deployVolatilePair : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @storage
                CAR;        # nat : @parameter%deployVolatilePair : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @storage
                SWAP;       # @parameter%deployVolatilePair : nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @storage
                DUG 7;      # @parameter%deployVolatilePair : nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                GET 6;      # address : nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                PAIR;       # pair address nat : pair nat (pair bool address) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                PAIR;       # pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                DIG 5;      # @parameter%deployVolatilePair : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : @parameter%deployVolatilePair : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @storage
                GET 5;      # bool : @parameter%deployVolatilePair : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @storage
                SWAP;       # @parameter%deployVolatilePair : bool : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @storage
                DUP;        # @parameter%deployVolatilePair : @parameter%deployVolatilePair : bool : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @storage
                DUG 7;      # @parameter%deployVolatilePair : bool : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : bool : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                GET 3;      # nat : bool : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                PAIR;       # pair nat bool : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                DUP 7;      # @parameter%deployVolatilePair : pair nat bool : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : pair nat bool : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                CAR;        # pair (address %token1Address) (nat %token1Amount) : pair nat bool : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                CDR;        # nat : pair nat bool : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                PAIR;       # pair nat (pair nat bool) : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @parameter%deployVolatilePair : @storage
                DIG 6;      # @parameter%deployVolatilePair : pair nat (pair nat bool) : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @storage
                CAR;        # pair (pair (address %token1Address) (nat %token1Amount)) (pair (nat %token1Id) (pair (bool %token1Type) (address %token2Address))) : pair nat (pair nat bool) : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @storage
                CAR;        # pair (address %token1Address) (nat %token1Amount) : pair nat (pair nat bool) : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @storage
                CAR;        # address : pair nat (pair nat bool) : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : pair operation address : @storage
                DIG 6;      # pair operation address : address : pair nat (pair nat bool) : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : @storage
                CDR;        # address : address : pair nat (pair nat bool) : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : @storage
                SOME;       # option address : address : pair nat (pair nat bool) : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : @storage
                IF_NONE
                  {
                    PUSH int 79; # int : address : pair nat (pair nat bool) : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : @storage
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : address : pair nat (pair nat bool) : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : @storage
                PAIR;       # pair @some address : pair nat (pair nat bool) : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : @storage
                PAIR;       # pair (pair @some address) (pair nat (pair nat bool)) : pair (pair address nat) (pair nat (pair bool address)) : mutez : @some : list operation : @storage
                PAIR;       # pair (pair (pair @some address) (pair nat (pair nat bool))) (pair (pair address nat) (pair nat (pair bool address))) : mutez : @some : list operation : @storage
                TRANSFER_TOKENS; # operation : list operation : @storage
                CONS;       # list operation : @storage
              }
              {
                SWAP;       # @storage : @parameter%modifyStableDeployer
                # == modifyStableDeployer ==
                # sp.verify(sp.sender == self.data.adminAddress) # @storage : @parameter%modifyStableDeployer
                DUP;        # @storage : @storage : @parameter%modifyStableDeployer
                DUG 2;      # @storage : @parameter%modifyStableDeployer : @storage
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : @parameter%modifyStableDeployer : @storage
                CAR;        # pair (address %adminAddress) (bool %paused) : @parameter%modifyStableDeployer : @storage
                CAR;        # address : @parameter%modifyStableDeployer : @storage
                SENDER;     # @sender : address : @parameter%modifyStableDeployer : @storage
                COMPARE;    # int : @parameter%modifyStableDeployer : @storage
                EQ;         # bool : @parameter%modifyStableDeployer : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: sp.sender == self.data.adminAddress"; # string : @parameter%modifyStableDeployer : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%modifyStableDeployer : @storage
                SWAP;       # @storage : @parameter%modifyStableDeployer
                # self.data.stableAmmDeployer = params # @storage : @parameter%modifyStableDeployer
                UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%modifyStableDeployer
                UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%modifyStableDeployer
                SWAP;       # pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%modifyStableDeployer
                CDR;        # pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%modifyStableDeployer
                DIG 3;      # @parameter%modifyStableDeployer : pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                PAIR;       # pair @parameter%modifyStableDeployer (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                SWAP;       # pair (address %adminAddress) (bool %paused) : pair @parameter%modifyStableDeployer (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair @parameter%modifyStableDeployer (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))
                PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair @parameter%modifyStableDeployer (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                NIL operation; # list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair @parameter%modifyStableDeployer (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
              }; # list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
          }
          {
            IF_LEFT
              {
                SWAP;       # @storage : @parameter%modifyVolatileDeployer
                # == modifyVolatileDeployer ==
                # sp.verify(sp.sender == self.data.adminAddress) # @storage : @parameter%modifyVolatileDeployer
                DUP;        # @storage : @storage : @parameter%modifyVolatileDeployer
                DUG 2;      # @storage : @parameter%modifyVolatileDeployer : @storage
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : @parameter%modifyVolatileDeployer : @storage
                CAR;        # pair (address %adminAddress) (bool %paused) : @parameter%modifyVolatileDeployer : @storage
                CAR;        # address : @parameter%modifyVolatileDeployer : @storage
                SENDER;     # @sender : address : @parameter%modifyVolatileDeployer : @storage
                COMPARE;    # int : @parameter%modifyVolatileDeployer : @storage
                EQ;         # bool : @parameter%modifyVolatileDeployer : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: sp.sender == self.data.adminAddress"; # string : @parameter%modifyVolatileDeployer : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%modifyVolatileDeployer : @storage
                # self.data.volatileAmmDeployer = params # @parameter%modifyVolatileDeployer : @storage
                UPDATE 5;   # @storage
                NIL operation; # list operation : @storage
              }
              {
                SWAP;       # @storage : @parameter%removePair
                # == removePair ==
                # sp.verify(sp.sender == self.data.adminAddress) # @storage : @parameter%removePair
                DUP;        # @storage : @storage : @parameter%removePair
                DUG 2;      # @storage : @parameter%removePair : @storage
                CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair : @storage
                CAR;        # pair (address %adminAddress) (bool %paused) : @parameter%removePair : @storage
                CAR;        # address : @parameter%removePair : @storage
                SENDER;     # @sender : address : @parameter%removePair : @storage
                COMPARE;    # int : @parameter%removePair : @storage
                EQ;         # bool : @parameter%removePair : @storage
                IF
                  {}
                  {
                    PUSH string "WrongCondition: sp.sender == self.data.adminAddress"; # string : @parameter%removePair : @storage
                    FAILWITH;   # FAILED
                  }; # @parameter%removePair : @storage
                # if params.stableType: # @parameter%removePair : @storage
                DUP;        # @parameter%removePair : @parameter%removePair : @storage
                CAR;        # pair (address %exchangeAddress) (pair (bool %stableType) (address %token1Address)) : @parameter%removePair : @storage
                GET 3;      # bool : @parameter%removePair : @storage
                IF
                  {
                    SWAP;       # @storage : @parameter%removePair
                    # del self.data.stableRegistry[params.token1Address][params.token1Id][params.token2Address][params.token2Id] # @storage : @parameter%removePair
                    UNPAIR;     # pair (pair (address %adminAddress) (bool %paused)) (pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    UNPAIR;     # pair (address %adminAddress) (bool %paused) : pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    SWAP;       # pair (address %stableAmmDeployer) (pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    UNPAIR;     # address : pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    SWAP;       # pair (bytes %stableContractMetadata) (big_map %stableRegistry address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    UNPAIR;     # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    SWAP;       # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    DUP 7;      # @parameter%removePair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    CAR;        # pair (address %exchangeAddress) (pair (bool %stableType) (address %token1Address)) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    GET 4;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    IF_NONE
                      {
                        PUSH int 275; # int : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    DUP 9;      # @parameter%removePair : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    GET 3;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    IF_NONE
                      {
                        PUSH int 275; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    DUP;        # @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    DUP 11;     # @parameter%removePair : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    GET 5;      # address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    DUP;        # address : address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    DUG 2;      # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    GET;        # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    IF_NONE
                      {
                        PUSH int 275; # int : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    NONE address; # option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    DUP 13;     # @parameter%removePair : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    GET 6;      # nat : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    UPDATE;     # map nat address : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    SOME;       # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    SWAP;       # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : bytes : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    SWAP;       # bytes : big_map address (map nat (map address (map nat address))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    PAIR;       # pair bytes (big_map address (map nat (map address (map nat address)))) : address : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    SWAP;       # address : pair bytes (big_map address (map nat (map address (map nat address)))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    PAIR;       # pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (address %adminAddress) (bool %paused) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    SWAP;       # pair (address %adminAddress) (bool %paused) : pair address (pair bytes (big_map address (map nat (map address (map nat address))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    PAIR;       # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))) : @parameter%removePair
                    PAIR;       # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : @parameter%removePair
                    SWAP;       # @parameter%removePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    # sp.transfer(params.exchangeAddress, sp.tez(0), sp.contract(sp.TAddress, self.data.stableAmmDeployer, entry_point='removeExchangePair').open_some()) # @parameter%removePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    NIL operation; # list operation : @parameter%removePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DUP 3;      # pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))) : list operation : @parameter%removePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address)))))) : list operation : @parameter%removePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    GET 3;      # address : list operation : @parameter%removePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CONTRACT %removeExchangePair address; # option (contract address) : list operation : @parameter%removePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    IF_NONE
                      {
                        PUSH int 277; # int : list operation : @parameter%removePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @parameter%removePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%removePair : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    DIG 3;      # @parameter%removePair : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # pair (address %exchangeAddress) (pair (bool %stableType) (address %token1Address)) : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CAR;        # address : mutez : @some : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    TRANSFER_TOKENS; # operation : list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                    CONS;       # list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
                  }
                  {
                    SWAP;       # @storage : @parameter%removePair
                    # del self.data.volatileRegistry[params.token1Address][params.token1Id][params.token2Address][params.token2Id] # @storage : @parameter%removePair
                    DUP;        # @storage : @storage : @parameter%removePair
                    GET 8;      # big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    DUP;        # big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    DUP 4;      # @parameter%removePair : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    CAR;        # pair (address %exchangeAddress) (pair (bool %stableType) (address %token1Address)) : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    GET 4;      # address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    DUP;        # address : address : big_map address (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    DUG 2;      # address : big_map address (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    GET;        # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    IF_NONE
                      {
                        PUSH int 287; # int : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    DUP;        # @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    DUP 6;      # @parameter%removePair : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    GET 3;      # nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    DUP;        # nat : nat : @some : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    DUG 2;      # nat : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    GET;        # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    IF_NONE
                      {
                        PUSH int 287; # int : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    DUP;        # @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    DUP 8;      # @parameter%removePair : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    GET 5;      # address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    DUP;        # address : address : @some : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    DUG 2;      # address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    GET;        # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    IF_NONE
                      {
                        PUSH int 287; # int : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    NONE address; # option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    DUP 10;     # @parameter%removePair : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    GET 6;      # nat : option address : @some : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    UPDATE;     # map nat address : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    SOME;       # option (map nat address) : address : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    SWAP;       # address : option (map nat address) : @some : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    UPDATE;     # map address (map nat address) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    SOME;       # option (map address (map nat address)) : nat : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    SWAP;       # nat : option (map address (map nat address)) : @some : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    UPDATE;     # map nat (map address (map nat address)) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    SOME;       # option (map nat (map address (map nat address))) : address : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    SWAP;       # address : option (map nat (map address (map nat address))) : big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    UPDATE;     # big_map address (map nat (map address (map nat address))) : @storage : @parameter%removePair
                    UPDATE 8;   # @storage : @parameter%removePair
                    SWAP;       # @parameter%removePair : @storage
                    # sp.transfer(params.exchangeAddress, sp.tez(0), sp.contract(sp.TAddress, self.data.volatileAmmDeployer, entry_point='removeExchangePair').open_some()) # @parameter%removePair : @storage
                    NIL operation; # list operation : @parameter%removePair : @storage
                    DUP 3;      # @storage : list operation : @parameter%removePair : @storage
                    GET 5;      # address : list operation : @parameter%removePair : @storage
                    CONTRACT %removeExchangePair address; # option (contract address) : list operation : @parameter%removePair : @storage
                    IF_NONE
                      {
                        PUSH int 289; # int : list operation : @parameter%removePair : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : list operation : @parameter%removePair : @storage
                    PUSH mutez 0; # mutez : @some : list operation : @parameter%removePair : @storage
                    DIG 3;      # @parameter%removePair : mutez : @some : list operation : @storage
                    CAR;        # pair (address %exchangeAddress) (pair (bool %stableType) (address %token1Address)) : mutez : @some : list operation : @storage
                    CAR;        # address : mutez : @some : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }; # list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
              }; # list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
          }; # list operation : pair (pair (pair (address %adminAddress) (bool %paused)) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
      }; # list operation : pair (pair (pair address bool) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
    NIL operation; # list operation : list operation : pair (pair (pair address bool) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
    SWAP;       # list operation : list operation : pair (pair (pair address bool) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
    ITER
      {
        CONS;       # list operation : pair (pair (pair address bool) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
      }; # list operation : pair (pair (pair address bool) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address)))))))
    PAIR;       # pair (list operation) (pair (pair (pair address bool) (pair address (pair bytes (big_map address (map nat (map address (map nat address))))))) (pair (pair (bytes %tokenDecimal) (pair (bytes %tokenIcon) (bytes %tokenSymbol))) (pair (address %volatileAmmDeployer) (pair (bytes %volatileContractMetadata) (big_map %volatileRegistry address (map nat (map address (map nat address))))))))
  };